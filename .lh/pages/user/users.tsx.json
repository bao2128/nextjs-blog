{
    "sourceFile": "pages/user/users.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 124,
            "patches": [
                {
                    "date": 1659508276453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1659518564873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -571,11 +571,11 @@\n                             display: 'none',\r\n                         },\r\n                         '.MuiDataGrid-columnHeaders': {\r\n                             backgroundColor: '#1976d2',\r\n-                            borderRadius: 0,\r\n+                            borderRadius: myTheme.shape.borderRadius,\r\n                         },\r\n-                        borderRadius: 0,\r\n+                        borderRadius: myTheme.shape.borderRadius,\r\n                         color: 'info.main',\r\n                         // '& .super-app-theme--cell': {\r\n                         //     backgroundColor: 'rgba(224, 183, 60, 0.55)',\r\n                         //     color: '#1a3e72',\r\n"
                },
                {
                    "date": 1659518602172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,8 +151,11 @@\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n \r\n     let isInValid = false\r\n+\r\n+    const myTheme  = useTheme()\r\n+\r\n     // console.log('path', router.pathname)\r\n     // const [rowID, setRowID] = useState<GridRowModel[]>(users)\r\n     // const [isEdit, setIsEdit] = useState(false)\r\n     // const isInEditMode = isEdit\r\n"
                },
                {
                    "date": 1659518623987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,10 @@\n         DialogContent, \r\n         DialogContentText, \r\n         DialogTitle, \r\n         Stack, \r\n-        Tooltip } from '@mui/material'\r\n+        Tooltip, \r\n+        useTheme} from '@mui/material'\r\n import Button from '@mui/material/Button'\r\n import AddIcon from '@mui/icons-material/Add'\r\n import EditIcon from '@mui/icons-material/Edit'\r\n import DeleteIcon from '@mui/icons-material/DeleteOutlined'\r\n"
                },
                {
                    "date": 1659519840818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,148 +154,9 @@\n \r\n     let isInValid = false\r\n \r\n     const myTheme  = useTheme()\r\n-\r\n-    // console.log('path', router.pathname)\r\n-    // const [rowID, setRowID] = useState<GridRowModel[]>(users)\r\n-    // const [isEdit, setIsEdit] = useState(false)\r\n-    // const isInEditMode = isEdit\r\n-    // console.log('isInEditMode', isInEditMode)\r\n-    // const [usersClone, setUsersClone] = useState(_.clone(users))\r\n-\r\n-    // console.log('clone', users)\r\n-\r\n-    // const [openDialog, setOpenDialog] = useState(false)\r\n-\r\n-\r\n-\r\n-    // const handleEditRowsStop = (params) => () => {\r\n-    //     console.log('stop edit')\r\n-\r\n-    //     usersClone[params.id].isEdit = false\r\n-    // }\r\n-    // const [editRow, setEditRow] = useState([])\r\n-    // const handleEditRowsStart = (params) => () => {\r\n-    //     // setIsEdit(true)\r\n-\r\n-    //     // setEditRow(prevState => [...prevState, params])\r\n-    //     console.log('start edit')\r\n-\r\n-    //     params.row.isEdit = true\r\n-    //     // console.log('params', params)\r\n-    //     // setUsersClone()\r\n-    //     // usersClone[params.id].isEdit = true\r\n-    //     // usersClone.map(e => {\r\n-    //     //     e.id === params.id? params : e\r\n-    //     // })\r\n-    //     // usersClone[params.id] = _.cloneDeep(params)\r\n-    //     usersClone[params.id].isEdit = true\r\n-    // }\r\n-\r\n-    // // const handleEditClick = (id) => () => {\r\n-    // //     console.log('edit ID:', id)\r\n-    // //     // params.isEditable = true\r\n-    // //     // // setRowID(id)\r\n-    // //     // // getValue\r\n-    // //     const tmp = _.cloneDeep(users)\r\n-    // //     tmp[id].mode = GridRowModes.Edit\r\n-    // //     console.log('tmp', tmp)\r\n-\r\n-    // //     setUsers(_.cloneDeep(tmp))\r\n-    // //     setRowID({ ...users, [id]: { mode: GridRowModes.Edit } })\r\n-    // //     console.log(users)\r\n-\r\n-    // // }\r\n-\r\n-    // const handleSaveClick = () => {\r\n-    //     // setRowID({ ...users, [id]: { mode: GridRowModes.View } })\r\n-    //     // console.log('params', params)\r\n-    //     // const tmp = _.cloneDeep(usersClone)\r\n-    //     // setUsers(usersClone.map((cloneRow) => users.map(row => {\r\n-    //     //     return cloneRow.id === row.id? _.cloneDeep(cloneRow) : [_.cloneDeep(cloneRow), ...users] })))\r\n-    //     const tmp = _.cloneDeep(usersClone)\r\n-    //     setUsers(_.cloneDeep(tmp))\r\n-    // }\r\n-\r\n-    // const handleDeleteClick = (params) => () => {\r\n-    //     console.log('params', params)\r\n-\r\n-    //     setUsersClone(usersClone.filter((row) => row.id !== params.id))\r\n-    //     // setUsers(users.filter((row) => row.id !== params.id))\r\n-    // }\r\n-\r\n-    // const handleCancelClick = () => {\r\n-\r\n-    //     setUsersClone(_.cloneDeep(users))\r\n-\r\n-    //     // setIsEdit(false)\r\n-    //     // setUsersClone(users.map((row) => (row.id === id ? row)))\r\n-    //     // return users\r\n-\r\n-    //     // const rowId = params.row.id\r\n-    //     // params.row.isEdit = false\r\n-    //     // console.log('params', params)\r\n-\r\n-    //     // // const oldRow = users.find(\r\n-    //     // //     (e) => e.id === rowId\r\n-    //     // // )\r\n-\r\n-    //     // usersClone[params.id].isEdit = false\r\n-    //     // console.log(\"oldRow\", usersClone[rowId])\r\n-    //     // usersClone[rowId] = _.cloneDeep(oldRow)\r\n-\r\n-    //     // console.log('<><><>', usersClone)\r\n-\r\n-    // }\r\n-    // //     const editedRow = usersClone.find((row) => row.id === id)\r\n-    // //     if (editedRow!.isNew) {\r\n-    // //         setUsers(usersClone.filter((row) => row.id !== id))\r\n-    // //     }\r\n-    // // }\r\n-\r\n-    // const handleOpenDialog = () => {\r\n-    //     setOpenDialog(true)\r\n-    // }\r\n-\r\n-    // const handleCloseDialog = () => {\r\n-    //     setOpenDialog(false)\r\n-    //     console.log('openDialog', openDialog)\r\n-    //     setSelectedId(_.pull(prevState,))\r\n-    // }\r\n-    // const handleCommit = (e: GridCellEditCommitParams) => {\r\n-    //     console.log('here')\r\n-\r\n-    //     const array = users.map(r => {\r\n-    //         if (r.id === e.id) {\r\n-    //             return {...r, [e.field]: e.value}\r\n-    //         } else {\r\n-    //             return {...r}\r\n-    //         }\r\n-    //     })\r\n-    //     setRowID(_.cloneDeep(array))\r\n-    //     console.log('array', array[e.id])\r\n-\r\n-    // }\r\n-    // const fetchUsers = async () => {\r\n-    //     const response = await fetch('/api/User')\r\n-    //     const data = await response.json()\r\n-    //     setUsers(data)\r\n-    //     // console.clear()\r\n-    //     // console.log(\"data\", data)\r\n-\r\n-    // }\r\n-\r\n-    // useEffect(() => {\r\n-    //     async function fetchData() {\r\n-    //       const res = await fetch('/api/User')\r\n-    //       const result: userList[] = await res.json()\r\n-    //     //   console.log(\"data\", result)\r\n-    //       setUsers(result)\r\n-    //     }\r\n-    //     fetchData()\r\n-    //   }, [])\r\n-\r\n+    \r\n     const handleRowEditStart = (params: GridRowParams, event: MuiEvent<React.SyntheticEvent>) => {\r\n         event.defaultMuiPrevented = true\r\n         // isInValid = true\r\n     }\r\n"
                },
                {
                    "date": 1659519894857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -310,18 +310,8 @@\n             headerName: 'Actions',\r\n             width: 100,\r\n             cellClassName: 'actions',\r\n             getActions: (params) => {\r\n-                // <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n-                //     <IconButton aria-label=\"save\" size=\"small\" onClick={handleSaveClick(params)}>\r\n-                //         <SaveIcon fontSize=\"inherit\"  />\r\n-                //     </IconButton> \r\n-                // <IconButton aria-label=\"cancel\" size=\"small\" onClick={handleCancelClick}>\r\n-                //                 <CancelIcon fontSize=\"inherit\" />\r\n-                //             </IconButton>\r\n-                //         </Stack>\r\n-                // const id = params.id\r\n-                // console.log('params', params.row.id, params.row.isEdit)\r\n                 const id = params.id\r\n                 const isInEditMode = rowModesModel[id]?.mode === GridRowModes.Edit\r\n                 if (isInEditMode) {\r\n                     return [\r\n@@ -347,16 +337,8 @@\n                         </Tooltip>,\r\n                     ]\r\n                 }\r\n                 return [\r\n-                    // <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n-                    // <IconButton aria-label=\"edit\" size=\"small\" onClick={handleEditRowsStart(params)}>\r\n-                    //     <EditIcon fontSize=\"inherit\"  />\r\n-                    // </IconButton>\r\n-                    //     <IconButton aria-label=\"delete\" size=\"small\" onClick={() => handleOpenDialog}>\r\n-                    //         <DeleteIcon fontSize=\"inherit\" />\r\n-                    //     </IconButton>\r\n-                    // </Stack>\r\n                     <Tooltip title=\"Edit\">\r\n                         <GridActionsCellItem\r\n                             icon={<EditIcon />}\r\n                             label=\"Edit\"\r\n@@ -381,19 +363,8 @@\n         <>\r\n             <Box sx={{\r\n                 height: 405, width: '100%'\r\n             }}>\r\n-                <Stack direction=\"row\" alignItems=\"center\" spacing={1} justifyContent=\"end\">\r\n-                    {/* <Button color=\"primary\" startIcon={<AddIcon />} onClick={handleAddRow}>\r\n-                        New User\r\n-                    </Button> */}\r\n-                    {/* <Button color=\"primary\" startIcon={<SaveIcon />} onClick={handleSaveClick}>\r\n-                        Save\r\n-                    </Button>\r\n-                    <Button color=\"primary\" startIcon={<CancelIcon />} onClick={handleCancelClick}>\r\n-                        Cancel\r\n-                    </Button> */}\r\n-                </Stack>\r\n                 <DataGrid\r\n                     // onCellEditCommit={handleCommit}\r\n                     autoHeight\r\n                     rows={users}\r\n"
                },
                {
                    "date": 1659522843836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,9 +144,10 @@\n         // setTimeout(() => router.push('/user/sign-in'), 200)\r\n         router.push('/user/sign-in')\r\n         console.log('not sign in')\r\n     }\r\n-\r\n+    console.log('status', status);\r\n+    \r\n     // const tmpUsers = users.filter((row) => row?.isNew !== true)\r\n     // setUsers(_.cloneDeep(tmpUsers))\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n"
                },
                {
                    "date": 1659522898729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,9 +144,8 @@\n         // setTimeout(() => router.push('/user/sign-in'), 200)\r\n         router.push('/user/sign-in')\r\n         console.log('not sign in')\r\n     }\r\n-    console.log('status', status);\r\n     \r\n     // const tmpUsers = users.filter((row) => row?.isNew !== true)\r\n     // setUsers(_.cloneDeep(tmpUsers))\r\n \r\n"
                },
                {
                    "date": 1659523014445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n export default function userPage() {\r\n     // useEffect(() => {\r\n     //     document.title = 'User'\r\n     //   },)\r\n-\r\n+    setTimeout(2000)\r\n     const [users, setUsers, status] = useAppContext()\r\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n"
                },
                {
                    "date": 1659523236962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,8 @@\n export default function userPage() {\r\n     // useEffect(() => {\r\n     //     document.title = 'User'\r\n     //   },)\r\n-    setTimeout(2000)\r\n     const [users, setUsers, status] = useAppContext()\r\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n"
                },
                {
                    "date": 1659523296317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n             break\r\n     }\r\n }\r\n \r\n-export default function userPage() {\r\n+function userPage2() {\r\n     // useEffect(() => {\r\n     //     document.title = 'User'\r\n     //   },)\r\n     const [users, setUsers, status] = useAppContext()\r\n"
                },
                {
                    "date": 1659523391511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -459,4 +459,8 @@\n             </Dialog>\r\n         </>\r\n     )\r\n }\r\n+\r\n+export default function userPage() {\r\n+    setTimeout(userPage2, 2000)\r\n+}\r\n"
                },
                {
                    "date": 1659523410390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -461,6 +461,6 @@\n     )\r\n }\r\n \r\n export default function userPage() {\r\n-    setTimeout(userPage2, 2000)\r\n+    return setTimeout(userPage2, 2000)\r\n }\r\n"
                },
                {
                    "date": 1659523542467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -461,6 +461,6 @@\n     )\r\n }\r\n \r\n export default function userPage() {\r\n-    return setTimeout(userPage2, 2000)\r\n+    setTimeout(() => userPage2, 2000)\r\n }\r\n"
                },
                {
                    "date": 1659523554813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -461,6 +461,6 @@\n     )\r\n }\r\n \r\n export default function userPage() {\r\n-    setTimeout(() => userPage2, 2000)\r\n+    return setTimeout(() => userPage2, 2000)\r\n }\r\n"
                },
                {
                    "date": 1659523679459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n             break\r\n     }\r\n }\r\n \r\n-function userPage2() {\r\n+export default function userPage() {\r\n     // useEffect(() => {\r\n     //     document.title = 'User'\r\n     //   },)\r\n     const [users, setUsers, status] = useAppContext()\r\n@@ -459,8 +459,4 @@\n             </Dialog>\r\n         </>\r\n     )\r\n }\r\n-\r\n-export default function userPage() {\r\n-    return setTimeout(() => userPage2, 2000)\r\n-}\r\n"
                },
                {
                    "date": 1659592891329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,9 +140,9 @@\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n         // setTimeout(() => router.push('/user/sign-in'), 200)\r\n-        router.push('/user/sign-in')\r\n+        // router.push('/user/sign-in')\r\n         console.log('not sign in')\r\n     }\r\n     \r\n     // const tmpUsers = users.filter((row) => row?.isNew !== true)\r\n"
                },
                {
                    "date": 1659598491217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n     console.log('props', props)\r\n \r\n     const regex = /^(([^<>()[\\]\\\\.,:\\s@\"]+(\\.[^<>()[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n \r\n-    const nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/\r\n+    const nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z0-9]*)*$/\r\n     // console.log(nameRegex.test(String(props.otherFieldsProps.firstName)),\r\n     //             nameRegex.test(String(props.otherFieldsProps.lastName)),            \r\n     //             regex.test(String(props.email).toLowerCase())\r\n     // )\r\n"
                },
                {
                    "date": 1659598692388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n     console.log('props', props)\r\n \r\n     const regex = /^(([^<>()[\\]\\\\.,:\\s@\"]+(\\.[^<>()[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n \r\n-    const nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z0-9]*)*$/\r\n+    const nameRegex = /^[a-zA-Z]+([',.- a-zA-Z0-9]*)*$/\r\n     // console.log(nameRegex.test(String(props.otherFieldsProps.firstName)),\r\n     //             nameRegex.test(String(props.otherFieldsProps.lastName)),            \r\n     //             regex.test(String(props.email).toLowerCase())\r\n     // )\r\n"
                },
                {
                    "date": 1659598723120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n     console.log('props', props)\r\n \r\n     const regex = /^(([^<>()[\\]\\\\.,:\\s@\"]+(\\.[^<>()[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n \r\n-    const nameRegex = /^[a-zA-Z]+([',.- a-zA-Z0-9]*)*$/\r\n+    const nameRegex = /^[a-zA-Z]+([',.- ][a-zA-Z0-9])*$/\r\n     // console.log(nameRegex.test(String(props.otherFieldsProps.firstName)),\r\n     //             nameRegex.test(String(props.otherFieldsProps.lastName)),            \r\n     //             regex.test(String(props.email).toLowerCase())\r\n     // )\r\n"
                },
                {
                    "date": 1659598734586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n     console.log('props', props)\r\n \r\n     const regex = /^(([^<>()[\\]\\\\.,:\\s@\"]+(\\.[^<>()[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n \r\n-    const nameRegex = /^[a-zA-Z]+([',.- ][a-zA-Z0-9])*$/\r\n+    const nameRegex = /^[a-zA-Z]+([',.- ]?[a-zA-Z0-9])*$/\r\n     // console.log(nameRegex.test(String(props.otherFieldsProps.firstName)),\r\n     //             nameRegex.test(String(props.otherFieldsProps.lastName)),            \r\n     //             regex.test(String(props.email).toLowerCase())\r\n     // )\r\n"
                },
                {
                    "date": 1659598756898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n     console.log('props', props)\r\n \r\n     const regex = /^(([^<>()[\\]\\\\.,:\\s@\"]+(\\.[^<>()[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n \r\n-    const nameRegex = /^[a-zA-Z]+([',.- ]?[a-zA-Z0-9])*$/\r\n+    const nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z0-9]*)*$/\r\n     // console.log(nameRegex.test(String(props.otherFieldsProps.firstName)),\r\n     //             nameRegex.test(String(props.otherFieldsProps.lastName)),            \r\n     //             regex.test(String(props.email).toLowerCase())\r\n     // )\r\n"
                },
                {
                    "date": 1659598881375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n     console.log('props', props)\r\n \r\n     const regex = /^(([^<>()[\\]\\\\.,:\\s@\"]+(\\.[^<>()[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n \r\n-    const nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z0-9]*)*$/\r\n+    const nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z0-9])?[a-zA-Z0-9]*)*$/\r\n     // console.log(nameRegex.test(String(props.otherFieldsProps.firstName)),\r\n     //             nameRegex.test(String(props.otherFieldsProps.lastName)),            \r\n     //             regex.test(String(props.email).toLowerCase())\r\n     // )\r\n"
                },
                {
                    "date": 1659599185065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n     console.log('props', props)\r\n \r\n     const regex = /^(([^<>()[\\]\\\\.,:\\s@\"]+(\\.[^<>()[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n \r\n-    const nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z0-9])?[a-zA-Z0-9]*)*$/\r\n+    const nameRegex = /^[a-zA-Z]+([',. -]*[a-zA-Z0-9])*$/\r\n     // console.log(nameRegex.test(String(props.otherFieldsProps.firstName)),\r\n     //             nameRegex.test(String(props.otherFieldsProps.lastName)),            \r\n     //             regex.test(String(props.email).toLowerCase())\r\n     // )\r\n"
                },
                {
                    "date": 1659599422322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n     console.log('props', props)\r\n \r\n     const regex = /^(([^<>()[\\]\\\\.,:\\s@\"]+(\\.[^<>()[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n \r\n-    const nameRegex = /^[a-zA-Z]+([',. -]*[a-zA-Z0-9])*$/\r\n+    const nameRegex = /^[a-zA-Z]+([',. -]|[a-zA-Z0-9])*$/\r\n     // console.log(nameRegex.test(String(props.otherFieldsProps.firstName)),\r\n     //             nameRegex.test(String(props.otherFieldsProps.lastName)),            \r\n     //             regex.test(String(props.email).toLowerCase())\r\n     // )\r\n"
                },
                {
                    "date": 1659599451536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n     console.log('props', props)\r\n \r\n     const regex = /^(([^<>()[\\]\\\\.,:\\s@\"]+(\\.[^<>()[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n \r\n-    const nameRegex = /^[a-zA-Z]+([',. -]|[a-zA-Z0-9])*$/\r\n+    const nameRegex = /^[a-zA-Z]+([',. -]*[a-zA-Z0-9])*$/\r\n     // console.log(nameRegex.test(String(props.otherFieldsProps.firstName)),\r\n     //             nameRegex.test(String(props.otherFieldsProps.lastName)),            \r\n     //             regex.test(String(props.email).toLowerCase())\r\n     // )\r\n"
                },
                {
                    "date": 1659599626724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -440,22 +440,24 @@\n                 <DialogContent>\r\n                     <DialogContentText>This operation cannot be undone. Are you sure?</DialogContentText>\r\n                 </DialogContent>\r\n                 <DialogActions>\r\n-                    <Button\r\n-                        variant=\"outlined\"\r\n-                        color=\"primary\"\r\n-                        onClick={handleConfirmDelete}\r\n-                    >\r\n-                        Yes\r\n-                    </Button>\r\n-                    <Button\r\n-                        variant=\"outlined\"\r\n-                        color=\"error\"\r\n-                        onClick={handleCloseDialog}\r\n-                    >\r\n-                        No\r\n-                    </Button>\r\n+                    <Box textAlign='center'>\r\n+                        <Button\r\n+                            variant=\"outlined\"\r\n+                            color=\"primary\"\r\n+                            onClick={handleConfirmDelete}\r\n+                        >\r\n+                            Yes\r\n+                        </Button>\r\n+                        <Button\r\n+                            variant=\"outlined\"\r\n+                            color=\"error\"\r\n+                            onClick={handleCloseDialog}\r\n+                        >\r\n+                            No\r\n+                        </Button>\r\n+                    </Box>\r\n                 </DialogActions>\r\n             </Dialog>\r\n         </>\r\n     )\r\n"
                },
                {
                    "date": 1659599647381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -442,16 +442,16 @@\n                 </DialogContent>\r\n                 <DialogActions>\r\n                     <Box textAlign='center'>\r\n                         <Button\r\n-                            variant=\"outlined\"\r\n+                            variant=\"contained\"\r\n                             color=\"primary\"\r\n                             onClick={handleConfirmDelete}\r\n                         >\r\n                             Yes\r\n                         </Button>\r\n                         <Button\r\n-                            variant=\"outlined\"\r\n+                            variant=\"contained\"\r\n                             color=\"error\"\r\n                             onClick={handleCloseDialog}\r\n                         >\r\n                             No\r\n"
                },
                {
                    "date": 1659599663943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -442,16 +442,16 @@\n                 </DialogContent>\r\n                 <DialogActions>\r\n                     <Box textAlign='center'>\r\n                         <Button\r\n-                            variant=\"contained\"\r\n+                            variant=\"outlined\"\r\n                             color=\"primary\"\r\n                             onClick={handleConfirmDelete}\r\n                         >\r\n                             Yes\r\n                         </Button>\r\n                         <Button\r\n-                            variant=\"contained\"\r\n+                            variant=\"outlined\"\r\n                             color=\"error\"\r\n                             onClick={handleCloseDialog}\r\n                         >\r\n                             No\r\n"
                },
                {
                    "date": 1659599732761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -440,9 +440,9 @@\n                 <DialogContent>\r\n                     <DialogContentText>This operation cannot be undone. Are you sure?</DialogContentText>\r\n                 </DialogContent>\r\n                 <DialogActions>\r\n-                    <Box textAlign='center'>\r\n+                    <Box>\r\n                         <Button\r\n                             variant=\"outlined\"\r\n                             color=\"primary\"\r\n                             onClick={handleConfirmDelete}\r\n"
                },
                {
                    "date": 1659599820584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -440,9 +440,14 @@\n                 <DialogContent>\r\n                     <DialogContentText>This operation cannot be undone. Are you sure?</DialogContentText>\r\n                 </DialogContent>\r\n                 <DialogActions>\r\n-                    <Box>\r\n+                    <Box sx={{\r\n+                        display: 'flex',\r\n+                        flexDirection: { xs: 'column', md: 'row' },\r\n+                        alignItems: 'center',\r\n+                        justifyContent: 'center',\r\n+                    }}>\r\n                         <Button\r\n                             variant=\"outlined\"\r\n                             color=\"primary\"\r\n                             onClick={handleConfirmDelete}\r\n"
                },
                {
                    "date": 1659599857794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -442,9 +442,9 @@\n                 </DialogContent>\r\n                 <DialogActions>\r\n                     <Box sx={{\r\n                         display: 'flex',\r\n-                        flexDirection: { xs: 'column', md: 'row' },\r\n+                        flexDirection: 'row',\r\n                         alignItems: 'center',\r\n                         justifyContent: 'center',\r\n                     }}>\r\n                         <Button\r\n"
                },
                {
                    "date": 1659599969955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -440,14 +440,13 @@\n                 <DialogContent>\r\n                     <DialogContentText>This operation cannot be undone. Are you sure?</DialogContentText>\r\n                 </DialogContent>\r\n                 <DialogActions>\r\n-                    <Box sx={{\r\n-                        display: 'flex',\r\n-                        flexDirection: 'row',\r\n-                        alignItems: 'center',\r\n-                        justifyContent: 'center',\r\n-                    }}>\r\n+                    <Box m={1}\r\n+                        display=\"flex\"\r\n+                        justifyContent=\"center\"\r\n+                        alignItems=\"center\"\r\n+                    >\r\n                         <Button\r\n                             variant=\"outlined\"\r\n                             color=\"primary\"\r\n                             onClick={handleConfirmDelete}\r\n"
                },
                {
                    "date": 1659600177444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -440,13 +440,9 @@\n                 <DialogContent>\r\n                     <DialogContentText>This operation cannot be undone. Are you sure?</DialogContentText>\r\n                 </DialogContent>\r\n                 <DialogActions>\r\n-                    <Box m={1}\r\n-                        display=\"flex\"\r\n-                        justifyContent=\"center\"\r\n-                        alignItems=\"center\"\r\n-                    >\r\n+                    <Box text-align=\"center\">\r\n                         <Button\r\n                             variant=\"outlined\"\r\n                             color=\"primary\"\r\n                             onClick={handleConfirmDelete}\r\n"
                },
                {
                    "date": 1659600190728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -440,9 +440,9 @@\n                 <DialogContent>\r\n                     <DialogContentText>This operation cannot be undone. Are you sure?</DialogContentText>\r\n                 </DialogContent>\r\n                 <DialogActions>\r\n-                    <Box text-align=\"center\">\r\n+                    <Box>\r\n                         <Button\r\n                             variant=\"outlined\"\r\n                             color=\"primary\"\r\n                             onClick={handleConfirmDelete}\r\n"
                },
                {
                    "date": 1659600354065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -440,9 +440,9 @@\n                 <DialogContent>\r\n                     <DialogContentText>This operation cannot be undone. Are you sure?</DialogContentText>\r\n                 </DialogContent>\r\n                 <DialogActions>\r\n-                    <Box>\r\n+                    <Typography align='center'>\r\n                         <Button\r\n                             variant=\"outlined\"\r\n                             color=\"primary\"\r\n                             onClick={handleConfirmDelete}\r\n@@ -455,9 +455,9 @@\n                             onClick={handleCloseDialog}\r\n                         >\r\n                             No\r\n                         </Button>\r\n-                    </Box>\r\n+                    </Typography>\r\n                 </DialogActions>\r\n             </Dialog>\r\n         </>\r\n     )\r\n"
                },
                {
                    "date": 1659600391287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -440,24 +440,24 @@\n                 <DialogContent>\r\n                     <DialogContentText>This operation cannot be undone. Are you sure?</DialogContentText>\r\n                 </DialogContent>\r\n                 <DialogActions>\r\n-                    <Typography align='center'>\r\n-                        <Button\r\n-                            variant=\"outlined\"\r\n-                            color=\"primary\"\r\n-                            onClick={handleConfirmDelete}\r\n-                        >\r\n-                            Yes\r\n-                        </Button>\r\n-                        <Button\r\n-                            variant=\"outlined\"\r\n-                            color=\"error\"\r\n-                            onClick={handleCloseDialog}\r\n-                        >\r\n-                            No\r\n-                        </Button>\r\n-                    </Typography>\r\n+                    <Button\r\n+                        variant=\"outlined\"\r\n+                        color=\"primary\"\r\n+                        onClick={handleConfirmDelete}\r\n+                        style={{margin: '0 auto', display: \"flex\"}}\r\n+                    >\r\n+                        Yes\r\n+                    </Button>\r\n+                    <Button\r\n+                        variant=\"outlined\"\r\n+                        color=\"error\"\r\n+                        onClick={handleCloseDialog}\r\n+                        style={{margin: '0 auto', display: \"flex\"}}\r\n+                    >\r\n+                        No\r\n+                    </Button>\r\n                 </DialogActions>\r\n             </Dialog>\r\n         </>\r\n     )\r\n"
                },
                {
                    "date": 1659600419265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -444,17 +444,17 @@\n                     <Button\r\n                         variant=\"outlined\"\r\n                         color=\"primary\"\r\n                         onClick={handleConfirmDelete}\r\n-                        style={{margin: '0 auto', display: \"flex\"}}\r\n+                        style={{margin: 'auto', display: \"flex\"}}\r\n                     >\r\n                         Yes\r\n                     </Button>\r\n                     <Button\r\n                         variant=\"outlined\"\r\n                         color=\"error\"\r\n                         onClick={handleCloseDialog}\r\n-                        style={{margin: '0 auto', display: \"flex\"}}\r\n+                        style={{margin: 'auto', display: \"flex\"}}\r\n                     >\r\n                         No\r\n                     </Button>\r\n                 </DialogActions>\r\n"
                },
                {
                    "date": 1659600483610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -444,9 +444,9 @@\n                     <Button\r\n                         variant=\"outlined\"\r\n                         color=\"primary\"\r\n                         onClick={handleConfirmDelete}\r\n-                        style={{margin: 'auto', display: \"flex\"}}\r\n+                        style={{margin: 'auto 0', display: \"flex\"}}\r\n                     >\r\n                         Yes\r\n                     </Button>\r\n                     <Button\r\n"
                },
                {
                    "date": 1659600605657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -444,9 +444,9 @@\n                     <Button\r\n                         variant=\"outlined\"\r\n                         color=\"primary\"\r\n                         onClick={handleConfirmDelete}\r\n-                        style={{margin: 'auto 0', display: \"flex\"}}\r\n+                        style={{margin: '2px 1em 0 auto', display: \"flex\"}}\r\n                     >\r\n                         Yes\r\n                     </Button>\r\n                     <Button\r\n"
                },
                {
                    "date": 1659600634972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -444,17 +444,17 @@\n                     <Button\r\n                         variant=\"outlined\"\r\n                         color=\"primary\"\r\n                         onClick={handleConfirmDelete}\r\n-                        style={{margin: '2px 1em 0 auto', display: \"flex\"}}\r\n+                        style={{margin: '5% auto', display: \"flex\"}}\r\n                     >\r\n                         Yes\r\n                     </Button>\r\n                     <Button\r\n                         variant=\"outlined\"\r\n                         color=\"error\"\r\n                         onClick={handleCloseDialog}\r\n-                        style={{margin: 'auto', display: \"flex\"}}\r\n+                        style={{margin: '5% auto', display: \"flex\"}}\r\n                     >\r\n                         No\r\n                     </Button>\r\n                 </DialogActions>\r\n"
                },
                {
                    "date": 1659600688820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -444,17 +444,17 @@\n                     <Button\r\n                         variant=\"outlined\"\r\n                         color=\"primary\"\r\n                         onClick={handleConfirmDelete}\r\n-                        style={{margin: '5% auto', display: \"flex\"}}\r\n+                        style={{margin: '0 5%', display: \"flex\"}}\r\n                     >\r\n                         Yes\r\n                     </Button>\r\n                     <Button\r\n                         variant=\"outlined\"\r\n                         color=\"error\"\r\n                         onClick={handleCloseDialog}\r\n-                        style={{margin: '5% auto', display: \"flex\"}}\r\n+                        style={{margin: '0 5%', display: \"flex\"}}\r\n                     >\r\n                         No\r\n                     </Button>\r\n                 </DialogActions>\r\n"
                },
                {
                    "date": 1659600714482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -444,17 +444,15 @@\n                     <Button\r\n                         variant=\"outlined\"\r\n                         color=\"primary\"\r\n                         onClick={handleConfirmDelete}\r\n-                        style={{margin: '0 5%', display: \"flex\"}}\r\n                     >\r\n                         Yes\r\n                     </Button>\r\n                     <Button\r\n                         variant=\"outlined\"\r\n                         color=\"error\"\r\n                         onClick={handleCloseDialog}\r\n-                        style={{margin: '0 5%', display: \"flex\"}}\r\n                     >\r\n                         No\r\n                     </Button>\r\n                 </DialogActions>\r\n"
                },
                {
                    "date": 1659600760216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,30 +47,8 @@\n //       },\r\n //     },\r\n //   })\r\n \r\n-\r\n-const theme = createTheme({\r\n-    palette: {\r\n-        background: {\r\n-            paper: '#fff',\r\n-        },\r\n-        text: {\r\n-            primary: '#173A5E',\r\n-            secondary: '#46505A',\r\n-        },\r\n-        action: {\r\n-            active: '#001E3C',\r\n-        },\r\n-        success: {\r\n-            dark: '#009688',\r\n-        },\r\n-        header: {\r\n-            primary: 'red',\r\n-        },\r\n-    },\r\n-})\r\n-\r\n const initUser = {\r\n     id: 0,\r\n     firstName: '',\r\n     lastName: '',\r\n"
                },
                {
                    "date": 1659601550170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n         // setTimeout(() => router.push('/user/sign-in'), 200)\r\n-        // router.push('/user/sign-in')\r\n+        router.push('/user/sign-in')\r\n         console.log('not sign in')\r\n     }\r\n     \r\n     // const tmpUsers = users.filter((row) => row?.isNew !== true)\r\n"
                },
                {
                    "date": 1659601644020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,18 +233,8 @@\n \r\n         return updatedRow\r\n     }\r\n \r\n-    const getCellTheme = (params) => {\r\n-        console.log('>>>theme', params.row.cellTheme)\r\n-        \r\n-        return params.row.celTheme\r\n-    }\r\n-\r\n-    // const handleDeleteClickTest = (e) => {\r\n-    //     console.log('e', e)\r\n-    // }\r\n-\r\n     const cols: GridColumns = [\r\n         { field: 'id', headerName: 'User ID', flex: 1, },\r\n         {\r\n             field: 'firstName', headerName: 'First name', flex: 1, editable: true,\r\n"
                },
                {
                    "date": 1659601669477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -378,27 +378,9 @@\n                             borderRadius: myTheme.shape.borderRadius,\r\n                         },\r\n                         borderRadius: myTheme.shape.borderRadius,\r\n                         color: 'info.main',\r\n-                        // '& .super-app-theme--cell': {\r\n-                        //     backgroundColor: 'rgba(224, 183, 60, 0.55)',\r\n-                        //     color: '#1a3e72',\r\n-                        //     fontWeight: '100',\r\n-                        // },\r\n-                        // '& .validInputs': {\r\n-                        //     backgroundColor: '#1976d2',\r\n-                        //     color: '#1a3e72',\r\n-                        //     fontWeight: '600',\r\n-                        // },\r\n-                        // '& .inValidInputs': {\r\n-                        //     backgroundColor: '#d47483',\r\n-                        //     color: '#fc0303',\r\n-                        //     fontWeight: '800',\r\n-                        // },\r\n                     }}\r\n-                    // getCellClassName={params => {\r\n-                    //     return params.value !== \"\"? \"validInputs\" : \"inValidInputs\"\r\n-                    // }}\r\n                 />\r\n             </Box>\r\n             <Dialog\r\n                 open={openDialog}\r\n"
                },
                {
                    "date": 1659603868779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -303,8 +303,28 @@\n                             />\r\n                         </Tooltip>,\r\n                     ]\r\n                 }\r\n+                else if (!params.row?.isSignIn) {\r\n+                    return [\r\n+                        <Tooltip title=\"Edit\">\r\n+                            <GridActionsCellItem\r\n+                                icon={<EditIcon />}\r\n+                                label=\"Edit\"\r\n+                                onClick={handleEditClick(id)}\r\n+                                color=\"primary\"\r\n+                            />\r\n+                        </Tooltip>,\r\n+                        <Tooltip title=\"Delete\">\r\n+                            <GridActionsCellItem\r\n+                                icon={<DeleteIcon />}\r\n+                                label=\"Delete\"\r\n+                                onClick={handleDeleteClick(id)}\r\n+                                color=\"error\"\r\n+                            />\r\n+                        </Tooltip>,\r\n+                    ]\r\n+                }\r\n                 return [\r\n                     <Tooltip title=\"Edit\">\r\n                         <GridActionsCellItem\r\n                             icon={<EditIcon />}\r\n@@ -312,16 +332,8 @@\n                             onClick={handleEditClick(id)}\r\n                             color=\"primary\"\r\n                         />\r\n                     </Tooltip>,\r\n-                    <Tooltip title=\"Delete\">\r\n-                        <GridActionsCellItem\r\n-                            icon={<DeleteIcon />}\r\n-                            label=\"Delete\"\r\n-                            onClick={handleDeleteClick(id)}\r\n-                            color=\"error\"\r\n-                        />\r\n-                    </Tooltip>,\r\n                 ]\r\n             },\r\n         },\r\n     ]\r\n"
                },
                {
                    "date": 1659604028025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -258,19 +258,9 @@\n                 return { ...params.props, error: isInValid }\r\n             }\r\n         },\r\n         {\r\n-            field: 'email', headerName: 'Email', flex: 1, editable: true,\r\n-            preProcessEditCellProps(params: GridPreProcessEditCellProps) {\r\n-                // const isValid = params.props.value.length > 0\r\n-                isInValid = !validateTextInput('email', params)\r\n-                // console.log('isInValid', isInValid)                    \r\n-                const id = params.id\r\n-                isInValid ? setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isEdited: true } : e))\r\n-                    : setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isEdited: false } : e))\r\n-\r\n-                return { ...params.props, error: isInValid }\r\n-            }\r\n+            field: 'email', headerName: 'Email', flex: 1,\r\n         },\r\n         {\r\n             field: 'actions',\r\n             type: 'actions',\r\n"
                },
                {
                    "date": 1659604069530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n \r\n function validateTextInput(name: String, props: GridPreProcessEditCellProps) {\r\n     console.log('props', props)\r\n \r\n-    const regex = /^(([^<>()[\\]\\\\.,:\\s@\"]+(\\.[^<>()[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n+    // const regex = /^(([^<>()[\\]\\\\.,:\\s@\"]+(\\.[^<>()[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n \r\n     const nameRegex = /^[a-zA-Z]+([',. -]*[a-zA-Z0-9])*$/\r\n     // console.log(nameRegex.test(String(props.otherFieldsProps.firstName)),\r\n     //             nameRegex.test(String(props.otherFieldsProps.lastName)),            \r\n@@ -76,11 +76,9 @@\n             //     regex.test(String(props.otherFieldsProps.email.value).toLowerCase())\r\n             // )\r\n             return (\r\n                 nameRegex.test(String(props.props.value)) &&\r\n-                nameRegex.test(String(props.otherFieldsProps.lastName.value)) &&\r\n-                regex.test(String(props.otherFieldsProps.email.value).toLowerCase())\r\n-            )\r\n+                nameRegex.test(String(props.otherFieldsProps.lastName.value))            )\r\n \r\n         case 'lastName':\r\n             // console.log('lastName',\r\n             //     nameRegex.test(String(props.otherFieldsProps.firstName.value)),\r\n@@ -89,23 +87,10 @@\n             // )\r\n \r\n             return (\r\n                 nameRegex.test(String(props.otherFieldsProps.firstName.value)) &&\r\n-                nameRegex.test(String(props.props.value)) &&\r\n-                regex.test(String(props.otherFieldsProps.email.value).toLowerCase())\r\n+                nameRegex.test(String(props.props.value))\r\n             )\r\n-        case 'email':\r\n-            // console.log('email',\r\n-            //     nameRegex.test(String(props.otherFieldsProps.firstName.value)),\r\n-            //     nameRegex.test(String(props.otherFieldsProps.lastName.value)),\r\n-            //     regex.test(String(props.props.value).toLowerCase())\r\n-            // )\r\n-\r\n-            return (\r\n-                nameRegex.test(String(props.otherFieldsProps.firstName.value)) &&\r\n-                nameRegex.test(String(props.otherFieldsProps.lastName.value)) &&\r\n-                regex.test(String(props.props.value).toLowerCase())\r\n-            )\r\n         default:\r\n             break\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1659604159547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n     isEdited: true,\r\n }\r\n \r\n function validateTextInput(name: String, props: GridPreProcessEditCellProps) {\r\n-    console.log('props', props)\r\n+    // console.log('props', props)\r\n \r\n     // const regex = /^(([^<>()[\\]\\\\.,:\\s@\"]+(\\.[^<>()[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n \r\n     const nameRegex = /^[a-zA-Z]+([',. -]*[a-zA-Z0-9])*$/\r\n"
                },
                {
                    "date": 1659604266772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -364,9 +364,9 @@\n                             backgroundColor: '#1976d2',\r\n                             borderRadius: myTheme.shape.borderRadius,\r\n                         },\r\n                         borderRadius: myTheme.shape.borderRadius,\r\n-                        color: 'info.main',\r\n+                        color: 'info.dark',\r\n                     }}\r\n                 />\r\n             </Box>\r\n             <Dialog\r\n"
                },
                {
                    "date": 1659604273058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,9 +103,9 @@\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n         // setTimeout(() => router.push('/user/sign-in'), 200)\r\n-        router.push('/user/sign-in')\r\n+        // router.push('/user/sign-in')\r\n         console.log('not sign in')\r\n     }\r\n     \r\n     // const tmpUsers = users.filter((row) => row?.isNew !== true)\r\n"
                },
                {
                    "date": 1659604297728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -364,9 +364,9 @@\n                             backgroundColor: '#1976d2',\r\n                             borderRadius: myTheme.shape.borderRadius,\r\n                         },\r\n                         borderRadius: myTheme.shape.borderRadius,\r\n-                        color: 'info.dark',\r\n+                        color: 'info.light',\r\n                     }}\r\n                 />\r\n             </Box>\r\n             <Dialog\r\n"
                },
                {
                    "date": 1659604315129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -364,9 +364,9 @@\n                             backgroundColor: '#1976d2',\r\n                             borderRadius: myTheme.shape.borderRadius,\r\n                         },\r\n                         borderRadius: myTheme.shape.borderRadius,\r\n-                        color: 'info.light',\r\n+                        color: 'info.main',\r\n                     }}\r\n                 />\r\n             </Box>\r\n             <Dialog\r\n"
                },
                {
                    "date": 1659604338246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,8 @@\n         DialogActions, \r\n         DialogContent, \r\n         DialogContentText, \r\n         DialogTitle, \r\n-        Stack, \r\n         Tooltip, \r\n         useTheme} from '@mui/material'\r\n import Button from '@mui/material/Button'\r\n import AddIcon from '@mui/icons-material/Add'\r\n@@ -27,9 +26,8 @@\n import SaveIcon from '@mui/icons-material/Save'\r\n import CancelIcon from '@mui/icons-material/Close'\r\n import { useAppContext } from '../../context/AppContext'\r\n import { useRouter } from 'next/router'\r\n-import { createTheme } from '@mui/system'\r\n import Typography from '@mui/material/Typography'\r\n \r\n \r\n // const useStyles = makeStyles({\r\n@@ -103,9 +101,9 @@\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n         // setTimeout(() => router.push('/user/sign-in'), 200)\r\n-        // router.push('/user/sign-in')\r\n+        router.push('/user/sign-in')\r\n         console.log('not sign in')\r\n     }\r\n     \r\n     // const tmpUsers = users.filter((row) => row?.isNew !== true)\r\n"
                },
                {
                    "date": 1659604722263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,35 +56,18 @@\n     isEdited: true,\r\n }\r\n \r\n function validateTextInput(name: String, props: GridPreProcessEditCellProps) {\r\n-    // console.log('props', props)\r\n-\r\n     // const regex = /^(([^<>()[\\]\\\\.,:\\s@\"]+(\\.[^<>()[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n \r\n     const nameRegex = /^[a-zA-Z]+([',. -]*[a-zA-Z0-9])*$/\r\n-    // console.log(nameRegex.test(String(props.otherFieldsProps.firstName)),\r\n-    //             nameRegex.test(String(props.otherFieldsProps.lastName)),            \r\n-    //             regex.test(String(props.email).toLowerCase())\r\n-    // )\r\n     switch (name) {\r\n         case 'firstName':\r\n-            // console.log('firstName',\r\n-            //     nameRegex.test(String(props.props.value)),\r\n-            //     nameRegex.test(String(props.otherFieldsProps.lastName.value)),\r\n-            //     regex.test(String(props.otherFieldsProps.email.value).toLowerCase())\r\n-            // )\r\n             return (\r\n                 nameRegex.test(String(props.props.value)) &&\r\n                 nameRegex.test(String(props.otherFieldsProps.lastName.value))            )\r\n \r\n         case 'lastName':\r\n-            // console.log('lastName',\r\n-            //     nameRegex.test(String(props.otherFieldsProps.firstName.value)),\r\n-            //     nameRegex.test(String(props.props.value)),\r\n-            //     regex.test(String(props.otherFieldsProps.email.value).toLowerCase())\r\n-            // )\r\n-\r\n             return (\r\n                 nameRegex.test(String(props.otherFieldsProps.firstName.value)) &&\r\n                 nameRegex.test(String(props.props.value))\r\n             )\r\n@@ -93,22 +76,15 @@\n     }\r\n }\r\n \r\n export default function userPage() {\r\n-    // useEffect(() => {\r\n-    //     document.title = 'User'\r\n-    //   },)\r\n     const [users, setUsers, status] = useAppContext()\r\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n-        // setTimeout(() => router.push('/user/sign-in'), 200)\r\n         router.push('/user/sign-in')\r\n         console.log('not sign in')\r\n     }\r\n-    \r\n-    // const tmpUsers = users.filter((row) => row?.isNew !== true)\r\n-    // setUsers(_.cloneDeep(tmpUsers))\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n \r\n@@ -117,9 +93,8 @@\n     const myTheme  = useTheme()\r\n     \r\n     const handleRowEditStart = (params: GridRowParams, event: MuiEvent<React.SyntheticEvent>) => {\r\n         event.defaultMuiPrevented = true\r\n-        // isInValid = true\r\n     }\r\n \r\n     const handleRowEditStop: GridEventListener<'rowEditStop'> = (params, event) => {\r\n         event.defaultMuiPrevented = true\r\n@@ -161,23 +136,14 @@\n \r\n     const handleSaveClick = (params: GridRowParams) => () => {\r\n         const id = params.id\r\n         setRowModesModel({ ...rowModesModel, [id]: { mode: GridRowModes.View } })\r\n-        // const tmpState = _.cloneDeep(users)\r\n-        console.log('rowId', id, '\\nparams', params, '\\nrowModel', rowModesModel)\r\n-\r\n-        // isInValid = params.row.map(e => {\r\n-        //     return e === ''\r\n-        // })\r\n-        // tmpState[0].isNew = false\r\n-        // setUsers(_.cloneDeep(tmpState))\r\n         isInValid ? setIsDisableBtn(true) : setIsDisableBtn(false)\r\n         setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isNew: false } : e))\r\n     }\r\n \r\n     const handleDeleteClick = (id: GridRowId) => () => {\r\n         setOpenDialog(true)\r\n-        // setUsers(users.filter((row) => row.id !== id))\r\n         setSelectedId(prevState => [...prevState, id])\r\n     }\r\n \r\n     const handleConfirmDelete = () => {\r\n@@ -186,15 +152,12 @@\n     }\r\n \r\n     const handleCloseDialog = () => {\r\n         setOpenDialog(false)\r\n-        // console.log('openDialog', openDialog)\r\n         setSelectedId([])\r\n     }\r\n \r\n     const handleCancelClick = (id: GridRowId) => () => {\r\n-        // console.log('users', users)\r\n-\r\n         setRowModesModel({\r\n             ...rowModesModel,\r\n             [id]: { mode: GridRowModes.View, ignoreModifications: true },\r\n         })\r\n@@ -210,9 +173,8 @@\n     }\r\n \r\n     const processRowUpdate = (newRow) => {\r\n         const updatedRow = { ...newRow }\r\n-        // console.log('updateRow', updatedRow)\r\n         setUsers(users.map((row) => (row.id === newRow.id ? updatedRow : row)))\r\n \r\n         return updatedRow\r\n     }\r\n@@ -222,9 +184,8 @@\n         {\r\n             field: 'firstName', headerName: 'First name', flex: 1, editable: true,\r\n             preProcessEditCellProps(params: GridPreProcessEditCellProps) {\r\n                 isInValid = !validateTextInput('firstName', params)\r\n-                // console.log('isInValid', isInValid)        \r\n                 const id = params.id\r\n                 isInValid ? setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isEdited: true } : e))\r\n                     : setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isEdited: false } : e))\r\n                 return { ...params.props, error: isInValid }\r\n@@ -233,9 +194,8 @@\n         {\r\n             field: 'lastName', headerName: 'Last name', flex: 1, editable: true,\r\n             preProcessEditCellProps(params: GridPreProcessEditCellProps) {\r\n                 isInValid = !validateTextInput('lastName', params)\r\n-                // console.log('isInValid', isInValid)                \r\n                 const id = params.id\r\n                 isInValid ? setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isEdited: true } : e))\r\n                     : setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isEdited: false } : e))\r\n                 return { ...params.props, error: isInValid }\r\n"
                },
                {
                    "date": 1659605099953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,9 +318,9 @@\n                         '.MuiDataGrid-columnSeparator': {\r\n                             display: 'none',\r\n                         },\r\n                         '.MuiDataGrid-columnHeaders': {\r\n-                            backgroundColor: '#1976d2',\r\n+                            backgroundColor: myTheme.palette.info.main,\r\n                             borderRadius: myTheme.shape.borderRadius,\r\n                         },\r\n                         borderRadius: myTheme.shape.borderRadius,\r\n                         color: 'info.main',\r\n"
                },
                {
                    "date": 1659605108202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n     const [users, setUsers, status] = useAppContext()\r\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n-        router.push('/user/sign-in')\r\n+        // router.push('/user/sign-in')\r\n         console.log('not sign in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n"
                },
                {
                    "date": 1659605230673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -296,9 +296,9 @@\n \r\n                     components={{\r\n                         Toolbar: () => {\r\n                             return (<GridToolbarContainer sx={{ justifyContent: 'flex-end' }}>\r\n-                                <Button startIcon={<AddIcon />} onClick={handleAddRow}>\r\n+                                <Button startIcon={<AddIcon />} onClick={handleAddRow} sx={{textTransform: 'none'}}>\r\n                                     New User\r\n                                 </Button>\r\n                             </GridToolbarContainer>)\r\n                         }\r\n"
                },
                {
                    "date": 1659605262657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -296,9 +296,9 @@\n \r\n                     components={{\r\n                         Toolbar: () => {\r\n                             return (<GridToolbarContainer sx={{ justifyContent: 'flex-end' }}>\r\n-                                <Button startIcon={<AddIcon />} onClick={handleAddRow} sx={{textTransform: 'none'}}>\r\n+                                <Button startIcon={<AddIcon />} onClick={handleAddRow} sx={{textTransform: 'uppercase'}}>\r\n                                     New User\r\n                                 </Button>\r\n                             </GridToolbarContainer>)\r\n                         }\r\n"
                },
                {
                    "date": 1659605337942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -296,9 +296,13 @@\n \r\n                     components={{\r\n                         Toolbar: () => {\r\n                             return (<GridToolbarContainer sx={{ justifyContent: 'flex-end' }}>\r\n-                                <Button startIcon={<AddIcon />} onClick={handleAddRow} sx={{textTransform: 'uppercase'}}>\r\n+                                <Button \r\n+                                        startIcon={<AddIcon />} \r\n+                                        onClick={handleAddRow} \r\n+                                        variant=\"outlined\"\r\n+                                        sx={{textTransform: 'uppercase'}}>\r\n                                     New User\r\n                                 </Button>\r\n                             </GridToolbarContainer>)\r\n                         }\r\n"
                },
                {
                    "date": 1659605361534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,9 +299,9 @@\n                             return (<GridToolbarContainer sx={{ justifyContent: 'flex-end' }}>\r\n                                 <Button \r\n                                         startIcon={<AddIcon />} \r\n                                         onClick={handleAddRow} \r\n-                                        variant=\"outlined\"\r\n+                                        variant=\"contained\"\r\n                                         sx={{textTransform: 'uppercase'}}>\r\n                                     New User\r\n                                 </Button>\r\n                             </GridToolbarContainer>)\r\n"
                },
                {
                    "date": 1659605383394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,9 +299,9 @@\n                             return (<GridToolbarContainer sx={{ justifyContent: 'flex-end' }}>\r\n                                 <Button \r\n                                         startIcon={<AddIcon />} \r\n                                         onClick={handleAddRow} \r\n-                                        variant=\"contained\"\r\n+                                        variant=\"text\"\r\n                                         sx={{textTransform: 'uppercase'}}>\r\n                                     New User\r\n                                 </Button>\r\n                             </GridToolbarContainer>)\r\n"
                },
                {
                    "date": 1659605697038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -300,9 +300,9 @@\n                                 <Button \r\n                                         startIcon={<AddIcon />} \r\n                                         onClick={handleAddRow} \r\n                                         variant=\"text\"\r\n-                                        sx={{textTransform: 'uppercase'}}>\r\n+                                        sx={{textTransform: 'uppercase', background: 'transparent'}}>\r\n                                     New User\r\n                                 </Button>\r\n                             </GridToolbarContainer>)\r\n                         }\r\n"
                },
                {
                    "date": 1659605714168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -300,9 +300,9 @@\n                                 <Button \r\n                                         startIcon={<AddIcon />} \r\n                                         onClick={handleAddRow} \r\n                                         variant=\"text\"\r\n-                                        sx={{textTransform: 'uppercase', background: 'transparent'}}>\r\n+                                        sx={{textTransform: 'uppercase'}}>\r\n                                     New User\r\n                                 </Button>\r\n                             </GridToolbarContainer>)\r\n                         }\r\n"
                },
                {
                    "date": 1659605739272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,9 +299,9 @@\n                             return (<GridToolbarContainer sx={{ justifyContent: 'flex-end' }}>\r\n                                 <Button \r\n                                         startIcon={<AddIcon />} \r\n                                         onClick={handleAddRow} \r\n-                                        variant=\"text\"\r\n+                                        \r\n                                         sx={{textTransform: 'uppercase'}}>\r\n                                     New User\r\n                                 </Button>\r\n                             </GridToolbarContainer>)\r\n"
                },
                {
                    "date": 1659606621301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -297,12 +297,12 @@\n                     components={{\r\n                         Toolbar: () => {\r\n                             return (<GridToolbarContainer sx={{ justifyContent: 'flex-end' }}>\r\n                                 <Button \r\n-                                        startIcon={<AddIcon />} \r\n-                                        onClick={handleAddRow} \r\n-                                        \r\n-                                        sx={{textTransform: 'uppercase'}}>\r\n+                                    startIcon={<AddIcon />} \r\n+                                    onClick={handleAddRow} \r\n+                                    sx={{textTransform: 'uppercase'}}\r\n+                                >\r\n                                     New User\r\n                                 </Button>\r\n                             </GridToolbarContainer>)\r\n                         }\r\n"
                },
                {
                    "date": 1659607086752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,22 +56,31 @@\n     isEdited: true,\r\n }\r\n \r\n function validateTextInput(name: String, props: GridPreProcessEditCellProps) {\r\n-    // const regex = /^(([^<>()[\\]\\\\.,:\\s@\"]+(\\.[^<>()[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n+    const regex = /^(([^<>()[\\]\\\\.,:\\s@\"]+(\\.[^<>()[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n \r\n     const nameRegex = /^[a-zA-Z]+([',. -]*[a-zA-Z0-9])*$/\r\n     switch (name) {\r\n         case 'firstName':\r\n             return (\r\n                 nameRegex.test(String(props.props.value)) &&\r\n-                nameRegex.test(String(props.otherFieldsProps.lastName.value))            )\r\n+                nameRegex.test(String(props.otherFieldsProps.lastName.value)) &&\r\n+                regex.test(String(props.otherFieldsProps.email.value))\r\n+            )\r\n \r\n         case 'lastName':\r\n             return (\r\n                 nameRegex.test(String(props.otherFieldsProps.firstName.value)) &&\r\n-                nameRegex.test(String(props.props.value))\r\n+                nameRegex.test(String(props.props.value)) &&\r\n+                regex.test(String(props.otherFieldsProps.email.value))\r\n             )\r\n+        case 'email':\r\n+            return (\r\n+                nameRegex.test(String(props.otherFieldsProps.firstName.value)) &&\r\n+                nameRegex.test(String(props.otherFieldsProps.lastName.value)) &&\r\n+                regex.test(String(props.props.value))\r\n+            )\r\n         default:\r\n             break\r\n     }\r\n }\r\n@@ -201,9 +210,16 @@\n                 return { ...params.props, error: isInValid }\r\n             }\r\n         },\r\n         {\r\n-            field: 'email', headerName: 'Email', flex: 1,\r\n+            field: 'email', headerName: 'Email', flex: 1, editable: true,\r\n+            preProcessEditCellProps(params: GridPreProcessEditCellProps) {\r\n+                isInValid = !validateTextInput('email', params)\r\n+                const id = params.id\r\n+                isInValid ? setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isEdited: true } : e))\r\n+                    : setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isEdited: false } : e))\r\n+                return { ...params.props, error: isInValid }\r\n+            }\r\n         },\r\n         {\r\n             field: 'actions',\r\n             type: 'actions',\r\n"
                },
                {
                    "date": 1659607217508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -272,18 +272,9 @@\n                             />\r\n                         </Tooltip>,\r\n                     ]\r\n                 }\r\n-                return [\r\n-                    <Tooltip title=\"Edit\">\r\n-                        <GridActionsCellItem\r\n-                            icon={<EditIcon />}\r\n-                            label=\"Edit\"\r\n-                            onClick={handleEditClick(id)}\r\n-                            color=\"primary\"\r\n-                        />\r\n-                    </Tooltip>,\r\n-                ]\r\n+                return []\r\n             },\r\n         },\r\n     ]\r\n \r\n"
                },
                {
                    "date": 1659607422065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,10 +89,10 @@\n     const [users, setUsers, status] = useAppContext()\r\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n-        // router.push('/user/sign-in')\r\n         console.log('not sign in')\r\n+        router.push('/user/sign-in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n"
                },
                {
                    "date": 1659607726911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n         console.log('not sign in')\r\n-        router.push('/user/sign-in')\r\n+        // router.push('/user/sign-in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n"
                },
                {
                    "date": 1659607741127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -280,9 +280,9 @@\n \r\n     return (\r\n         <>\r\n             <Box sx={{\r\n-                height: 405, width: '100%'\r\n+                height: 'auto', width: '100%'\r\n             }}>\r\n                 <DataGrid\r\n                     // onCellEditCommit={handleCommit}\r\n                     autoHeight\r\n"
                },
                {
                    "date": 1659607755411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -280,9 +280,9 @@\n \r\n     return (\r\n         <>\r\n             <Box sx={{\r\n-                height: 'auto', width: '100%'\r\n+                height: 500, width: '100%'\r\n             }}>\r\n                 <DataGrid\r\n                     // onCellEditCommit={handleCommit}\r\n                     autoHeight\r\n"
                },
                {
                    "date": 1659607765473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -280,9 +280,9 @@\n \r\n     return (\r\n         <>\r\n             <Box sx={{\r\n-                height: 500, width: '100%'\r\n+                height: 800, width: '100%'\r\n             }}>\r\n                 <DataGrid\r\n                     // onCellEditCommit={handleCommit}\r\n                     autoHeight\r\n"
                },
                {
                    "date": 1659607775576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -280,9 +280,9 @@\n \r\n     return (\r\n         <>\r\n             <Box sx={{\r\n-                height: 800, width: '100%'\r\n+                height: 'auto', width: '100%'\r\n             }}>\r\n                 <DataGrid\r\n                     // onCellEditCommit={handleCommit}\r\n                     autoHeight\r\n"
                },
                {
                    "date": 1659608031909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n     const [users, setUsers, status] = useAppContext()\r\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n-        console.log('not sign in')\r\n+        // console.log('not sign in')\r\n         // router.push('/user/sign-in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n"
                },
                {
                    "date": 1659608209777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n         // console.log('not sign in')\r\n-        // router.push('/user/sign-in')\r\n+        router.push('/user/sign-in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n"
                },
                {
                    "date": 1659608297146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n         // console.log('not sign in')\r\n-        router.push('/user/sign-in')\r\n+        // router.push('/user/sign-in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n"
                },
                {
                    "date": 1659608410898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n         // console.log('not sign in')\r\n-        // router.push('/user/sign-in')\r\n+        router.push('/user/sign-in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n"
                },
                {
                    "date": 1659609694740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,10 @@\n import CancelIcon from '@mui/icons-material/Close'\r\n import { useAppContext } from '../../context/AppContext'\r\n import { useRouter } from 'next/router'\r\n import Typography from '@mui/material/Typography'\r\n+import PersonAddOutlinedIcon from '@mui/icons-material/PersonAddOutlined'\r\n \r\n-\r\n // const useStyles = makeStyles({\r\n //     headerCell: {\r\n //       backgroundColor: '#def2ff',\r\n //       color: 'white',\r\n@@ -304,9 +304,9 @@\n                     components={{\r\n                         Toolbar: () => {\r\n                             return (<GridToolbarContainer sx={{ justifyContent: 'flex-end' }}>\r\n                                 <Button \r\n-                                    startIcon={<AddIcon />} \r\n+                                    startIcon={<PersonAddOutlinedIcon />} \r\n                                     onClick={handleAddRow} \r\n                                     sx={{textTransform: 'uppercase'}}\r\n                                 >\r\n                                     New User\r\n"
                },
                {
                    "date": 1659609702325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n         // console.log('not sign in')\r\n-        router.push('/user/sign-in')\r\n+        // router.push('/user/sign-in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n"
                },
                {
                    "date": 1659609782634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n         // console.log('not sign in')\r\n-        // router.push('/user/sign-in')\r\n+        router.push('/user/sign-in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n"
                },
                {
                    "date": 1659669356603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,90 +279,96 @@\n     ]\r\n \r\n     return (\r\n         <>\r\n-            <Box sx={{\r\n-                height: 'auto', width: '100%'\r\n-            }}>\r\n-                <DataGrid\r\n-                    // onCellEditCommit={handleCommit}\r\n-                    autoHeight\r\n-                    rows={users}\r\n-                    columns={cols}\r\n-                    pageSize={5}\r\n-                    rowsPerPageOptions={[5]}\r\n-                    // checkboxSelection\r\n-                    editMode=\"row\"\r\n-                    editRowsModel={editRowsModel}\r\n-                    // onEditRowsModelChange={handleEditRowsModelChange}\r\n-                    // onRowEditCommit={handleRowEditCommit}\r\n-                    rowModesModel={rowModesModel}\r\n-                    // rowModesModel={{ 3: { mode: GridRowModes.Edit } }}\r\n-                    onRowEditStart={handleRowEditStart}\r\n-                    onRowEditStop={handleRowEditStop}\r\n-                    processRowUpdate={processRowUpdate}\r\n+            {!status}? (\r\n+                <Typography>\r\n+                    Loading...\r\n+                </Typography>\r\n+            ) : (\r\n+                <Box sx={{\r\n+                    height: 'auto', width: '100%'\r\n+                }}>\r\n+                    <DataGrid\r\n+                        // onCellEditCommit={handleCommit}\r\n+                        autoHeight\r\n+                        rows={users}\r\n+                        columns={cols}\r\n+                        pageSize={5}\r\n+                        rowsPerPageOptions={[5]}\r\n+                        // checkboxSelection\r\n+                        editMode=\"row\"\r\n+                        editRowsModel={editRowsModel}\r\n+                        // onEditRowsModelChange={handleEditRowsModelChange}\r\n+                        // onRowEditCommit={handleRowEditCommit}\r\n+                        rowModesModel={rowModesModel}\r\n+                        // rowModesModel={{ 3: { mode: GridRowModes.Edit } }}\r\n+                        onRowEditStart={handleRowEditStart}\r\n+                        onRowEditStop={handleRowEditStop}\r\n+                        processRowUpdate={processRowUpdate}\r\n \r\n-                    components={{\r\n-                        Toolbar: () => {\r\n-                            return (<GridToolbarContainer sx={{ justifyContent: 'flex-end' }}>\r\n-                                <Button \r\n-                                    startIcon={<PersonAddOutlinedIcon />} \r\n-                                    onClick={handleAddRow} \r\n-                                    sx={{textTransform: 'uppercase'}}\r\n-                                >\r\n-                                    New User\r\n-                                </Button>\r\n-                            </GridToolbarContainer>)\r\n-                        }\r\n-                    }}\r\n-                    componentsProps={{\r\n-                        toolbar: { setUsers, setRowModesModel },\r\n-                    }}\r\n+                        components={{\r\n+                            Toolbar: () => {\r\n+                                return (<GridToolbarContainer sx={{ justifyContent: 'flex-end' }}>\r\n+                                    <Button \r\n+                                        startIcon={<PersonAddOutlinedIcon />} \r\n+                                        onClick={handleAddRow} \r\n+                                        sx={{textTransform: 'uppercase'}}\r\n+                                    >\r\n+                                        New User\r\n+                                    </Button>\r\n+                                </GridToolbarContainer>)\r\n+                            }\r\n+                        }}\r\n+                        componentsProps={{\r\n+                            toolbar: { setUsers, setRowModesModel },\r\n+                        }}\r\n \r\n-                    experimentalFeatures={{ newEditingApi: true }}\r\n-                    disableSelectionOnClick\r\n-                    sx={{\r\n-                        '.MuiDataGrid-columnHeaderTitle': {\r\n-                            // fontWeight: 'bold',\r\n-                            // backgroundColor: '#1976d2',\r\n-                            color: 'white',\r\n-                        },\r\n-                        '.MuiDataGrid-columnSeparator': {\r\n-                            display: 'none',\r\n-                        },\r\n-                        '.MuiDataGrid-columnHeaders': {\r\n-                            backgroundColor: myTheme.palette.info.main,\r\n+                        experimentalFeatures={{ newEditingApi: true }}\r\n+                        disableSelectionOnClick\r\n+                        sx={{\r\n+                            '.MuiDataGrid-columnHeaderTitle': {\r\n+                                // fontWeight: 'bold',\r\n+                                // backgroundColor: '#1976d2',\r\n+                                color: 'white',\r\n+                            },\r\n+                            '.MuiDataGrid-columnSeparator': {\r\n+                                display: 'none',\r\n+                            },\r\n+                            '.MuiDataGrid-columnHeaders': {\r\n+                                backgroundColor: myTheme.palette.info.main,\r\n+                                borderRadius: myTheme.shape.borderRadius,\r\n+                            },\r\n                             borderRadius: myTheme.shape.borderRadius,\r\n-                        },\r\n-                        borderRadius: myTheme.shape.borderRadius,\r\n-                        color: 'info.main',\r\n-                    }}\r\n-                />\r\n-            </Box>\r\n-            <Dialog\r\n-                open={openDialog}\r\n-            // onClose={handleCloseDialog}\r\n-            >\r\n-                <DialogTitle>Delete</DialogTitle>\r\n-                <DialogContent>\r\n-                    <DialogContentText>This operation cannot be undone. Are you sure?</DialogContentText>\r\n-                </DialogContent>\r\n-                <DialogActions>\r\n-                    <Button\r\n-                        variant=\"outlined\"\r\n-                        color=\"primary\"\r\n-                        onClick={handleConfirmDelete}\r\n-                    >\r\n-                        Yes\r\n-                    </Button>\r\n-                    <Button\r\n-                        variant=\"outlined\"\r\n-                        color=\"error\"\r\n-                        onClick={handleCloseDialog}\r\n-                    >\r\n-                        No\r\n-                    </Button>\r\n-                </DialogActions>\r\n-            </Dialog>\r\n+                            color: 'info.main',\r\n+                        }}\r\n+                    />\r\n+                </Box>\r\n+                <Dialog\r\n+                    open={openDialog}\r\n+                // onClose={handleCloseDialog}\r\n+                >\r\n+                    <DialogTitle>Delete</DialogTitle>\r\n+                    <DialogContent>\r\n+                        <DialogContentText>This operation cannot be undone. Are you sure?</DialogContentText>\r\n+                    </DialogContent>\r\n+                    <DialogActions>\r\n+                        <Button\r\n+                            variant=\"outlined\"\r\n+                            color=\"primary\"\r\n+                            onClick={handleConfirmDelete}\r\n+                        >\r\n+                            Yes\r\n+                        </Button>\r\n+                        <Button\r\n+                            variant=\"outlined\"\r\n+                            color=\"error\"\r\n+                            onClick={handleCloseDialog}\r\n+                        >\r\n+                            No\r\n+                        </Button>\r\n+                    </DialogActions>\r\n+                </Dialog>\r\n+            )\r\n         </>\r\n     )\r\n }\r\n"
                },
                {
                    "date": 1659669434033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n         // console.log('not sign in')\r\n-        router.push('/user/sign-in')\r\n+        // router.push('/user/sign-in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n"
                },
                {
                    "date": 1659669593211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -278,97 +278,99 @@\n         },\r\n     ]\r\n \r\n     return (\r\n-        <>\r\n-            {!status}? (\r\n+        <>{\r\n+            !status? (\r\n                 <Typography>\r\n                     Loading...\r\n                 </Typography>\r\n             ) : (\r\n-                <Box sx={{\r\n-                    height: 'auto', width: '100%'\r\n-                }}>\r\n-                    <DataGrid\r\n-                        // onCellEditCommit={handleCommit}\r\n-                        autoHeight\r\n-                        rows={users}\r\n-                        columns={cols}\r\n-                        pageSize={5}\r\n-                        rowsPerPageOptions={[5]}\r\n-                        // checkboxSelection\r\n-                        editMode=\"row\"\r\n-                        editRowsModel={editRowsModel}\r\n-                        // onEditRowsModelChange={handleEditRowsModelChange}\r\n-                        // onRowEditCommit={handleRowEditCommit}\r\n-                        rowModesModel={rowModesModel}\r\n-                        // rowModesModel={{ 3: { mode: GridRowModes.Edit } }}\r\n-                        onRowEditStart={handleRowEditStart}\r\n-                        onRowEditStop={handleRowEditStop}\r\n-                        processRowUpdate={processRowUpdate}\r\n+                <>\r\n+                    <Box sx={{\r\n+                        height: 'auto', width: '100%'\r\n+                    }}>\r\n+                        <DataGrid\r\n+                            // onCellEditCommit={handleCommit}\r\n+                            autoHeight\r\n+                            rows={users}\r\n+                            columns={cols}\r\n+                            pageSize={5}\r\n+                            rowsPerPageOptions={[5]}\r\n+                            // checkboxSelection\r\n+                            editMode=\"row\"\r\n+                            editRowsModel={editRowsModel}\r\n+                            // onEditRowsModelChange={handleEditRowsModelChange}\r\n+                            // onRowEditCommit={handleRowEditCommit}\r\n+                            rowModesModel={rowModesModel}\r\n+                            // rowModesModel={{ 3: { mode: GridRowModes.Edit } }}\r\n+                            onRowEditStart={handleRowEditStart}\r\n+                            onRowEditStop={handleRowEditStop}\r\n+                            processRowUpdate={processRowUpdate}\r\n \r\n-                        components={{\r\n-                            Toolbar: () => {\r\n-                                return (<GridToolbarContainer sx={{ justifyContent: 'flex-end' }}>\r\n-                                    <Button \r\n-                                        startIcon={<PersonAddOutlinedIcon />} \r\n-                                        onClick={handleAddRow} \r\n-                                        sx={{textTransform: 'uppercase'}}\r\n-                                    >\r\n-                                        New User\r\n-                                    </Button>\r\n-                                </GridToolbarContainer>)\r\n-                            }\r\n-                        }}\r\n-                        componentsProps={{\r\n-                            toolbar: { setUsers, setRowModesModel },\r\n-                        }}\r\n+                            components={{\r\n+                                Toolbar: () => {\r\n+                                    return (<GridToolbarContainer sx={{ justifyContent: 'flex-end' }}>\r\n+                                        <Button \r\n+                                            startIcon={<PersonAddOutlinedIcon />} \r\n+                                            onClick={handleAddRow} \r\n+                                            sx={{textTransform: 'uppercase'}}\r\n+                                        >\r\n+                                            New User\r\n+                                        </Button>\r\n+                                    </GridToolbarContainer>)\r\n+                                }\r\n+                            }}\r\n+                            componentsProps={{\r\n+                                toolbar: { setUsers, setRowModesModel },\r\n+                            }}\r\n \r\n-                        experimentalFeatures={{ newEditingApi: true }}\r\n-                        disableSelectionOnClick\r\n-                        sx={{\r\n-                            '.MuiDataGrid-columnHeaderTitle': {\r\n-                                // fontWeight: 'bold',\r\n-                                // backgroundColor: '#1976d2',\r\n-                                color: 'white',\r\n-                            },\r\n-                            '.MuiDataGrid-columnSeparator': {\r\n-                                display: 'none',\r\n-                            },\r\n-                            '.MuiDataGrid-columnHeaders': {\r\n-                                backgroundColor: myTheme.palette.info.main,\r\n+                            experimentalFeatures={{ newEditingApi: true }}\r\n+                            disableSelectionOnClick\r\n+                            sx={{\r\n+                                '.MuiDataGrid-columnHeaderTitle': {\r\n+                                    // fontWeight: 'bold',\r\n+                                    // backgroundColor: '#1976d2',\r\n+                                    color: 'white',\r\n+                                },\r\n+                                '.MuiDataGrid-columnSeparator': {\r\n+                                    display: 'none',\r\n+                                },\r\n+                                '.MuiDataGrid-columnHeaders': {\r\n+                                    backgroundColor: myTheme.palette.info.main,\r\n+                                    borderRadius: myTheme.shape.borderRadius,\r\n+                                },\r\n                                 borderRadius: myTheme.shape.borderRadius,\r\n-                            },\r\n-                            borderRadius: myTheme.shape.borderRadius,\r\n-                            color: 'info.main',\r\n-                        }}\r\n-                    />\r\n-                </Box>\r\n-                <Dialog\r\n-                    open={openDialog}\r\n-                // onClose={handleCloseDialog}\r\n-                >\r\n-                    <DialogTitle>Delete</DialogTitle>\r\n-                    <DialogContent>\r\n-                        <DialogContentText>This operation cannot be undone. Are you sure?</DialogContentText>\r\n-                    </DialogContent>\r\n-                    <DialogActions>\r\n-                        <Button\r\n-                            variant=\"outlined\"\r\n-                            color=\"primary\"\r\n-                            onClick={handleConfirmDelete}\r\n-                        >\r\n-                            Yes\r\n-                        </Button>\r\n-                        <Button\r\n-                            variant=\"outlined\"\r\n-                            color=\"error\"\r\n-                            onClick={handleCloseDialog}\r\n-                        >\r\n-                            No\r\n-                        </Button>\r\n-                    </DialogActions>\r\n-                </Dialog>\r\n+                                color: 'info.main',\r\n+                            }}\r\n+                        />\r\n+                    </Box>\r\n+                    <Dialog\r\n+                        open={openDialog}\r\n+                    // onClose={handleCloseDialog}\r\n+                    >\r\n+                        <DialogTitle>Delete</DialogTitle>\r\n+                        <DialogContent>\r\n+                            <DialogContentText>This operation cannot be undone. Are you sure?</DialogContentText>\r\n+                        </DialogContent>\r\n+                        <DialogActions>\r\n+                            <Button\r\n+                                variant=\"outlined\"\r\n+                                color=\"primary\"\r\n+                                onClick={handleConfirmDelete}\r\n+                            >\r\n+                                Yes\r\n+                            </Button>\r\n+                            <Button\r\n+                                variant=\"outlined\"\r\n+                                color=\"error\"\r\n+                                onClick={handleCloseDialog}\r\n+                            >\r\n+                                No\r\n+                            </Button>\r\n+                        </DialogActions>\r\n+                    </Dialog>\r\n+                </>\r\n             )\r\n-        </>\r\n+        }</>\r\n     )\r\n }\r\n"
                },
                {
                    "date": 1659669678766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n     const [users, setUsers, status] = useAppContext()\r\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n-        // console.log('not sign in')\r\n+        console.log(status,'not sign in')\r\n         // router.push('/user/sign-in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n"
                },
                {
                    "date": 1659669710488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,9 @@\n     ]\r\n \r\n     return (\r\n         <>{\r\n-            !status? (\r\n+            status? (\r\n                 <Typography>\r\n                     Loading...\r\n                 </Typography>\r\n             ) : (\r\n"
                },
                {
                    "date": 1659669860616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,9 @@\n     ]\r\n \r\n     return (\r\n         <>{\r\n-            status? (\r\n+            (status === 'false')? (\r\n                 <Typography>\r\n                     Loading...\r\n                 </Typography>\r\n             ) : (\r\n"
                },
                {
                    "date": 1659669979917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -280,9 +280,9 @@\n \r\n     return (\r\n         <>{\r\n             (status === 'false')? (\r\n-                <Typography>\r\n+                <Typography align='center'>\r\n                     Loading...\r\n                 </Typography>\r\n             ) : (\r\n                 <>\r\n"
                },
                {
                    "date": 1659670040818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,10 +89,10 @@\n     const [users, setUsers, status] = useAppContext()\r\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n-        console.log(status,'not sign in')\r\n-        // router.push('/user/sign-in')\r\n+        // console.log(status,'not sign in')\r\n+        router.push('/user/sign-in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n"
                },
                {
                    "date": 1659670311153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -280,9 +280,9 @@\n \r\n     return (\r\n         <>{\r\n             (status === 'false')? (\r\n-                <Typography align='center'>\r\n+                <Typography align='center' textTransform='uppercase'>\r\n                     Loading...\r\n                 </Typography>\r\n             ) : (\r\n                 <>\r\n"
                },
                {
                    "date": 1659670354084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n         // console.log(status,'not sign in')\r\n-        router.push('/user/sign-in')\r\n+        // router.push('/user/sign-in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n"
                },
                {
                    "date": 1659670415420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,8 @@\n         DialogTitle, \r\n         Tooltip, \r\n         useTheme} from '@mui/material'\r\n import Button from '@mui/material/Button'\r\n-import AddIcon from '@mui/icons-material/Add'\r\n import EditIcon from '@mui/icons-material/Edit'\r\n import DeleteIcon from '@mui/icons-material/DeleteOutlined'\r\n import SaveIcon from '@mui/icons-material/Save'\r\n import CancelIcon from '@mui/icons-material/Close'\r\n"
                },
                {
                    "date": 1659671068679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,9 @@\n \r\n     return (\r\n         <>{\r\n             (status === 'false')? (\r\n-                <Typography align='center' textTransform='uppercase'>\r\n+                <Typography align='center' textTransform='uppercase' color={myTheme.palette.info.main}>\r\n                     Loading...\r\n                 </Typography>\r\n             ) : (\r\n                 <>\r\n"
                },
                {
                    "date": 1659671088387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,9 @@\n \r\n     return (\r\n         <>{\r\n             (status === 'false')? (\r\n-                <Typography align='center' textTransform='uppercase' color={myTheme.palette.info.main}>\r\n+                <Typography align='center' color={myTheme.palette.info.main}>\r\n                     Loading...\r\n                 </Typography>\r\n             ) : (\r\n                 <>\r\n"
                },
                {
                    "date": 1659671118185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,10 +88,9 @@\n     const [users, setUsers, status] = useAppContext()\r\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n-        // console.log(status,'not sign in')\r\n-        // router.push('/user/sign-in')\r\n+        router.push('/user/sign-in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n"
                },
                {
                    "date": 1660701524227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n     }\r\n }\r\n \r\n export default function userPage() {\r\n-    const [users, setUsers, status] = useAppContext()\r\n+    const [users, setUsers, status, alertMessage, setAlertMessage] = useAppContext()\r\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n         router.push('/user/sign-in')\r\n@@ -159,8 +159,9 @@\n     }\r\n \r\n     const handleCloseDialog = () => {\r\n         setOpenDialog(false)\r\n+        setAlertMessage(`User ${selectedId[0].id} has been deleted!`)\r\n         setSelectedId([])\r\n     }\r\n \r\n     const handleCancelClick = (id: GridRowId) => () => {\r\n"
                },
                {
                    "date": 1660701697320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,8 +145,9 @@\n         const id = params.id\r\n         setRowModesModel({ ...rowModesModel, [id]: { mode: GridRowModes.View } })\r\n         isInValid ? setIsDisableBtn(true) : setIsDisableBtn(false)\r\n         setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isNew: false } : e))\r\n+        setAlertMessage('Save successfully!')\r\n     }\r\n \r\n     const handleDeleteClick = (id: GridRowId) => () => {\r\n         setOpenDialog(true)\r\n"
                },
                {
                    "date": 1660701866816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n     }\r\n }\r\n \r\n export default function userPage() {\r\n-    const [users, setUsers, status, alertMessage, setAlertMessage] = useAppContext()\r\n+    const [users, setUsers, status, setStatus, isDisabled, setIsDisabled, alertMessage, setAlertMessage] = useAppContext()\r\n     const router = useRouter()\r\n \r\n     if (status === 'false') {\r\n         router.push('/user/sign-in')\r\n"
                },
                {
                    "date": 1660702112175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,8 +160,10 @@\n     }\r\n \r\n     const handleCloseDialog = () => {\r\n         setOpenDialog(false)\r\n+        console.log('selectedId', selectedId);\r\n+        \r\n         setAlertMessage(`User ${selectedId[0].id} has been deleted!`)\r\n         setSelectedId([])\r\n     }\r\n \r\n"
                },
                {
                    "date": 1660702156848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,11 +160,9 @@\n     }\r\n \r\n     const handleCloseDialog = () => {\r\n         setOpenDialog(false)\r\n-        console.log('selectedId', selectedId);\r\n-        \r\n-        setAlertMessage(`User ${selectedId[0].id} has been deleted!`)\r\n+        setAlertMessage(`User ${selectedId[0]} has been deleted!`)\r\n         setSelectedId([])\r\n     }\r\n \r\n     const handleCancelClick = (id: GridRowId) => () => {\r\n"
                },
                {
                    "date": 1660702725130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,10 +144,10 @@\n     const handleSaveClick = (params: GridRowParams) => () => {\r\n         const id = params.id\r\n         setRowModesModel({ ...rowModesModel, [id]: { mode: GridRowModes.View } })\r\n         isInValid ? setIsDisableBtn(true) : setIsDisableBtn(false)\r\n+        setAlertMessage(params.row?.isNew ? `Add new user successfully!` : `Edit user ${id} successfully!`)\r\n         setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isNew: false } : e))\r\n-        setAlertMessage('Save successfully!')\r\n     }\r\n \r\n     const handleDeleteClick = (id: GridRowId) => () => {\r\n         setOpenDialog(true)\r\n"
                },
                {
                    "date": 1660705606967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n import { useAppContext } from '../../context/AppContext'\r\n import { useRouter } from 'next/router'\r\n import Typography from '@mui/material/Typography'\r\n import PersonAddOutlinedIcon from '@mui/icons-material/PersonAddOutlined'\r\n+import { useSnackbar } from 'notistack'\r\n \r\n // const useStyles = makeStyles({\r\n //     headerCell: {\r\n //       backgroundColor: '#def2ff',\r\n@@ -93,8 +94,9 @@\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n+    const [enqueueSnackbar] = useSnackbar()\r\n \r\n     let isInValid = false\r\n \r\n     const myTheme  = useTheme()\r\n@@ -144,9 +146,10 @@\n     const handleSaveClick = (params: GridRowParams) => () => {\r\n         const id = params.id\r\n         setRowModesModel({ ...rowModesModel, [id]: { mode: GridRowModes.View } })\r\n         isInValid ? setIsDisableBtn(true) : setIsDisableBtn(false)\r\n-        setAlertMessage(params.row?.isNew ? `Add new user successfully!` : `Edit user ${id} successfully!`)\r\n+        // setAlertMessage(params.row?.isNew ? `Add new user successfully!` : `Edit user ${id} successfully!`)\r\n+        enqueueSnackbar(params.row?.isNew ? `Add new user successfully!` : `Edit user ${id} successfully!`)\r\n         setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isNew: false } : e))\r\n     }\r\n \r\n     const handleDeleteClick = (id: GridRowId) => () => {\r\n@@ -160,9 +163,10 @@\n     }\r\n \r\n     const handleCloseDialog = () => {\r\n         setOpenDialog(false)\r\n-        setAlertMessage(`User ${selectedId[0]} has been deleted!`)\r\n+        // setAlertMessage(`User ${selectedId[0]} has been deleted!`)\r\n+        enqueueSnackbar(`User ${selectedId[0]} has been deleted!`)\r\n         setSelectedId([])\r\n     }\r\n \r\n     const handleCancelClick = (id: GridRowId) => () => {\r\n"
                },
                {
                    "date": 1660705646078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n-    const [enqueueSnackbar] = useSnackbar()\r\n+    const {enqueueSnackbar} = useSnackbar()\r\n \r\n     let isInValid = false\r\n \r\n     const myTheme  = useTheme()\r\n"
                },
                {
                    "date": 1660705948821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,11 +87,13 @@\n \r\n export default function userPage() {\r\n     const [users, setUsers, status, setStatus, isDisabled, setIsDisabled, alertMessage, setAlertMessage] = useAppContext()\r\n     const router = useRouter()\r\n+    const {enqueueSnackBar} = useSnackbar()\r\n \r\n     if (status === 'false') {\r\n         router.push('/user/sign-in')\r\n+        enqueueSnackbar('You are not signed in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n"
                },
                {
                    "date": 1660706011236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n \r\n export default function userPage() {\r\n     const [users, setUsers, status, setStatus, isDisabled, setIsDisabled, alertMessage, setAlertMessage] = useAppContext()\r\n     const router = useRouter()\r\n-    const {enqueueSnackBar} = useSnackbar()\r\n+    const {enqueueSnackbar} = useSnackbar()\r\n \r\n     if (status === 'false') {\r\n         router.push('/user/sign-in')\r\n         enqueueSnackbar('You are not signed in')\r\n"
                },
                {
                    "date": 1660706022758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,9 +96,8 @@\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n-    const {enqueueSnackbar} = useSnackbar()\r\n \r\n     let isInValid = false\r\n \r\n     const myTheme  = useTheme()\r\n"
                },
                {
                    "date": 1660706038034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,10 +90,10 @@\n     const router = useRouter()\r\n     const {enqueueSnackbar} = useSnackbar()\r\n \r\n     if (status === 'false') {\r\n+        enqueueSnackbar('You are not signed in')\r\n         router.push('/user/sign-in')\r\n-        enqueueSnackbar('You are not signed in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n"
                },
                {
                    "date": 1660706147017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n     const router = useRouter()\r\n     const {enqueueSnackbar} = useSnackbar()\r\n \r\n     if (status === 'false') {\r\n-        enqueueSnackbar('You are not signed in')\r\n+        enqueueSnackbar('You are not signed in', {variant: 'error'})\r\n         router.push('/user/sign-in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n"
                },
                {
                    "date": 1660706227300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,9 +148,9 @@\n         const id = params.id\r\n         setRowModesModel({ ...rowModesModel, [id]: { mode: GridRowModes.View } })\r\n         isInValid ? setIsDisableBtn(true) : setIsDisableBtn(false)\r\n         // setAlertMessage(params.row?.isNew ? `Add new user successfully!` : `Edit user ${id} successfully!`)\r\n-        enqueueSnackbar(params.row?.isNew ? `Add new user successfully!` : `Edit user ${id} successfully!`)\r\n+        enqueueSnackbar(params.row?.isNew ? `Add new user successfully!` : `Edit user ${id} successfully!`, {variant: 'success'})\r\n         setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isNew: false } : e))\r\n     }\r\n \r\n     const handleDeleteClick = (id: GridRowId) => () => {\r\n@@ -165,9 +165,9 @@\n \r\n     const handleCloseDialog = () => {\r\n         setOpenDialog(false)\r\n         // setAlertMessage(`User ${selectedId[0]} has been deleted!`)\r\n-        enqueueSnackbar(`User ${selectedId[0]} has been deleted!`)\r\n+        enqueueSnackbar(`User ${selectedId[0]} has been deleted!`, { variant: 'success' })\r\n         setSelectedId([])\r\n     }\r\n \r\n     const handleCancelClick = (id: GridRowId) => () => {\r\n"
                },
                {
                    "date": 1660706315614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n     const router = useRouter()\r\n     const {enqueueSnackbar} = useSnackbar()\r\n \r\n     if (status === 'false') {\r\n-        enqueueSnackbar('You are not signed in', {variant: 'error'})\r\n+        enqueueSnackbar('You are not signed in.', {variant: 'error'})\r\n         router.push('/user/sign-in')\r\n     }\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n"
                },
                {
                    "date": 1660709162625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,15 +159,15 @@\n     }\r\n \r\n     const handleConfirmDelete = () => {\r\n         setUsers(users.filter((row) => row.id !== selectedId[0]))\r\n+        enqueueSnackbar(`User ${selectedId[0]} has been deleted!`, { variant: 'success' })\r\n         handleCloseDialog()\r\n     }\r\n \r\n     const handleCloseDialog = () => {\r\n         setOpenDialog(false)\r\n         // setAlertMessage(`User ${selectedId[0]} has been deleted!`)\r\n-        enqueueSnackbar(`User ${selectedId[0]} has been deleted!`, { variant: 'success' })\r\n         setSelectedId([])\r\n     }\r\n \r\n     const handleCancelClick = (id: GridRowId) => () => {\r\n"
                },
                {
                    "date": 1660709269992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,9 +159,9 @@\n     }\r\n \r\n     const handleConfirmDelete = () => {\r\n         setUsers(users.filter((row) => row.id !== selectedId[0]))\r\n-        enqueueSnackbar(`User ${selectedId[0]} has been deleted!`, { variant: 'success' })\r\n+        enqueueSnackbar(`User ${selectedId[0]} has been deleted!`, { variant: 'info' })\r\n         handleCloseDialog()\r\n     }\r\n \r\n     const handleCloseDialog = () => {\r\n"
                },
                {
                    "date": 1660709289127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,9 +148,9 @@\n         const id = params.id\r\n         setRowModesModel({ ...rowModesModel, [id]: { mode: GridRowModes.View } })\r\n         isInValid ? setIsDisableBtn(true) : setIsDisableBtn(false)\r\n         // setAlertMessage(params.row?.isNew ? `Add new user successfully!` : `Edit user ${id} successfully!`)\r\n-        enqueueSnackbar(params.row?.isNew ? `Add new user successfully!` : `Edit user ${id} successfully!`, {variant: 'success'})\r\n+        enqueueSnackbar(params.row?.isNew ? `Add new user successfully!` : `Edit user ${id} successfully!`, {variant: 'info'})\r\n         setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isNew: false } : e))\r\n     }\r\n \r\n     const handleDeleteClick = (id: GridRowId) => () => {\r\n"
                },
                {
                    "date": 1660709313335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,9 +165,8 @@\n     }\r\n \r\n     const handleCloseDialog = () => {\r\n         setOpenDialog(false)\r\n-        // setAlertMessage(`User ${selectedId[0]} has been deleted!`)\r\n         setSelectedId([])\r\n     }\r\n \r\n     const handleCancelClick = (id: GridRowId) => () => {\r\n"
                },
                {
                    "date": 1660719048177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,8 +89,9 @@\n     const [users, setUsers, status, setStatus, isDisabled, setIsDisabled, alertMessage, setAlertMessage] = useAppContext()\r\n     const router = useRouter()\r\n     const {enqueueSnackbar} = useSnackbar()\r\n \r\n+    \r\n     if (status === 'false') {\r\n         enqueueSnackbar('You are not signed in.', {variant: 'error'})\r\n         router.push('/user/sign-in')\r\n     }\r\n"
                },
                {
                    "date": 1660719212753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import _ from 'lodash'\r\n-import { useState } from 'react'\r\n+import { useEffect, useState } from 'react'\r\n import {DataGrid,\r\n         GridActionsCellItem,\r\n         GridColumns,\r\n         GridEventListener, \r\n@@ -89,13 +89,14 @@\n     const [users, setUsers, status, setStatus, isDisabled, setIsDisabled, alertMessage, setAlertMessage] = useAppContext()\r\n     const router = useRouter()\r\n     const {enqueueSnackbar} = useSnackbar()\r\n \r\n-    \r\n-    if (status === 'false') {\r\n-        enqueueSnackbar('You are not signed in.', {variant: 'error'})\r\n-        router.push('/user/sign-in')\r\n-    }\r\n+    useEffect(() => {\r\n+        if (status === 'false') {\r\n+            enqueueSnackbar('You are not signed in.', {variant: 'error'})\r\n+            router.push('/user/sign-in')\r\n+        }\r\n+    }, [])\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n \r\n"
                },
                {
                    "date": 1660719250964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n         if (status === 'false') {\r\n             enqueueSnackbar('You are not signed in.', {variant: 'error'})\r\n             router.push('/user/sign-in')\r\n         }\r\n-    }, [])\r\n+    }, [status])\r\n \r\n     const [openDialog, setOpenDialog] = useState(false)\r\n     const [selectedId, setSelectedId] = useState([])\r\n \r\n"
                },
                {
                    "date": 1660786021637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n import { useAppContext } from '../../context/AppContext'\r\n import { useRouter } from 'next/router'\r\n import Typography from '@mui/material/Typography'\r\n import PersonAddOutlinedIcon from '@mui/icons-material/PersonAddOutlined'\r\n+import CheckCircleIcon from '@mui/icons-material/CheckCircle'\r\n import { useSnackbar } from 'notistack'\r\n \r\n // const useStyles = makeStyles({\r\n //     headerCell: {\r\n@@ -150,9 +151,10 @@\n         const id = params.id\r\n         setRowModesModel({ ...rowModesModel, [id]: { mode: GridRowModes.View } })\r\n         isInValid ? setIsDisableBtn(true) : setIsDisableBtn(false)\r\n         // setAlertMessage(params.row?.isNew ? `Add new user successfully!` : `Edit user ${id} successfully!`)\r\n-        enqueueSnackbar(params.row?.isNew ? `Add new user successfully!` : `Edit user ${id} successfully!`, {variant: 'info'})\r\n+        enqueueSnackbar(<><CheckCircleIcon/><Typography>&nbsp;{params.row?.isNew ? `Add new user successfully!` : `Edit user ${id} successfully!`}</Typography></>,\r\n+            { variant: 'info' })\r\n         setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isNew: false } : e))\r\n     }\r\n \r\n     const handleDeleteClick = (id: GridRowId) => () => {\r\n"
                },
                {
                    "date": 1660786352074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n import { useRouter } from 'next/router'\r\n import Typography from '@mui/material/Typography'\r\n import PersonAddOutlinedIcon from '@mui/icons-material/PersonAddOutlined'\r\n import CheckCircleIcon from '@mui/icons-material/CheckCircle'\r\n+import CancelIcon from '@mui/icons-material/Cancel'\r\n import { useSnackbar } from 'notistack'\r\n \r\n // const useStyles = makeStyles({\r\n //     headerCell: {\r\n@@ -92,9 +93,11 @@\n     const {enqueueSnackbar} = useSnackbar()\r\n \r\n     useEffect(() => {\r\n         if (status === 'false') {\r\n-            enqueueSnackbar('You are not signed in.', {variant: 'error'})\r\n+            // enqueueSnackbar('You are not signed in.', {variant: 'error'})\r\n+            enqueueSnackbar(<><CancelIcon/><Typography>&nbsp;You are not signed in.</Typography></>,\r\n+            { variant: 'error' })\r\n             router.push('/user/sign-in')\r\n         }\r\n     }, [status])\r\n \r\n@@ -163,9 +166,11 @@\n     }\r\n \r\n     const handleConfirmDelete = () => {\r\n         setUsers(users.filter((row) => row.id !== selectedId[0]))\r\n-        enqueueSnackbar(`User ${selectedId[0]} has been deleted!`, { variant: 'info' })\r\n+        // enqueueSnackbar(`User ${selectedId[0]} has been deleted!`, { variant: 'info' })\r\n+        enqueueSnackbar(<><CheckCircleIcon/><Typography>&nbsp;{`User ${selectedId[0]} has been deleted!`}</Typography></>,\r\n+            { variant: 'info' })\r\n         handleCloseDialog()\r\n     }\r\n \r\n     const handleCloseDialog = () => {\r\n"
                },
                {
                    "date": 1660786446094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n import { useRouter } from 'next/router'\r\n import Typography from '@mui/material/Typography'\r\n import PersonAddOutlinedIcon from '@mui/icons-material/PersonAddOutlined'\r\n import CheckCircleIcon from '@mui/icons-material/CheckCircle'\r\n-import CancelIcon from '@mui/icons-material/Cancel'\r\n+// import CancelIcon from '@mui/icons-material/Cancel'\r\n import { useSnackbar } from 'notistack'\r\n \r\n // const useStyles = makeStyles({\r\n //     headerCell: {\r\n"
                },
                {
                    "date": 1660787209962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n import { useAppContext } from '../../context/AppContext'\r\n import { useRouter } from 'next/router'\r\n import Typography from '@mui/material/Typography'\r\n import PersonAddOutlinedIcon from '@mui/icons-material/PersonAddOutlined'\r\n-import CheckCircleIcon from '@mui/icons-material/CheckCircle'\r\n+import CheckIcon from '@mui/icons-material/Check'\r\n // import CancelIcon from '@mui/icons-material/Cancel'\r\n import { useSnackbar } from 'notistack'\r\n \r\n // const useStyles = makeStyles({\r\n@@ -154,9 +154,9 @@\n         const id = params.id\r\n         setRowModesModel({ ...rowModesModel, [id]: { mode: GridRowModes.View } })\r\n         isInValid ? setIsDisableBtn(true) : setIsDisableBtn(false)\r\n         // setAlertMessage(params.row?.isNew ? `Add new user successfully!` : `Edit user ${id} successfully!`)\r\n-        enqueueSnackbar(<><CheckCircleIcon/><Typography>&nbsp;{params.row?.isNew ? `Add new user successfully!` : `Edit user ${id} successfully!`}</Typography></>,\r\n+        enqueueSnackbar(<><CheckIcon/><Typography>&nbsp;{params.row?.isNew ? `Add new user successfully!` : `Edit user ${id} successfully!`}</Typography></>,\r\n             { variant: 'info' })\r\n         setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isNew: false } : e))\r\n     }\r\n \r\n@@ -167,9 +167,9 @@\n \r\n     const handleConfirmDelete = () => {\r\n         setUsers(users.filter((row) => row.id !== selectedId[0]))\r\n         // enqueueSnackbar(`User ${selectedId[0]} has been deleted!`, { variant: 'info' })\r\n-        enqueueSnackbar(<><CheckCircleIcon/><Typography>&nbsp;{`User ${selectedId[0]} has been deleted!`}</Typography></>,\r\n+        enqueueSnackbar(<><CheckIcon/><Typography>&nbsp;{`User ${selectedId[0]} has been deleted!`}</Typography></>,\r\n             { variant: 'info' })\r\n         handleCloseDialog()\r\n     }\r\n \r\n"
                },
                {
                    "date": 1660788451511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n     useEffect(() => {\r\n         if (status === 'false') {\r\n             // enqueueSnackbar('You are not signed in.', {variant: 'error'})\r\n             enqueueSnackbar(<><CancelIcon/><Typography>&nbsp;You are not signed in.</Typography></>,\r\n-            { variant: 'error' })\r\n+                { variant: 'error' })\r\n             router.push('/user/sign-in')\r\n         }\r\n     }, [status])\r\n \r\n"
                },
                {
                    "date": 1660793320505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,9 @@\n import CheckIcon from '@mui/icons-material/Check'\r\n // import CancelIcon from '@mui/icons-material/Cancel'\r\n import { useSnackbar } from 'notistack'\r\n \r\n+\r\n // const useStyles = makeStyles({\r\n //     headerCell: {\r\n //       backgroundColor: '#def2ff',\r\n //       color: 'white',\r\n"
                }
            ],
            "date": 1659508276453,
            "name": "Commit-0",
            "content": "import _ from 'lodash'\r\nimport { useState } from 'react'\r\nimport {DataGrid,\r\n        GridActionsCellItem,\r\n        GridColumns,\r\n        GridEventListener, \r\n        GridPreProcessEditCellProps, \r\n        GridRowId,  \r\n        GridRowModes, \r\n        GridRowModesModel, \r\n        GridRowParams,  \r\n        GridToolbarContainer, \r\n        MuiEvent } from '@mui/x-data-grid'\r\nimport {Box, \r\n        Dialog, \r\n        DialogActions, \r\n        DialogContent, \r\n        DialogContentText, \r\n        DialogTitle, \r\n        Stack, \r\n        Tooltip } from '@mui/material'\r\nimport Button from '@mui/material/Button'\r\nimport AddIcon from '@mui/icons-material/Add'\r\nimport EditIcon from '@mui/icons-material/Edit'\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined'\r\nimport SaveIcon from '@mui/icons-material/Save'\r\nimport CancelIcon from '@mui/icons-material/Close'\r\nimport { useAppContext } from '../../context/AppContext'\r\nimport { useRouter } from 'next/router'\r\nimport { createTheme } from '@mui/system'\r\nimport Typography from '@mui/material/Typography'\r\n\r\n\r\n// const useStyles = makeStyles({\r\n//     headerCell: {\r\n//       backgroundColor: '#def2ff',\r\n//       color: 'white',\r\n//       fontWeight: 'bold',\r\n//     },\r\n//     row: {\r\n//       '&:nth-of-type(odd)': {\r\n//         backgroundColor: '#def2ff',\r\n//       },\r\n//       '&:last-child td, &:last-child th': {\r\n//         border: 0,\r\n//       },\r\n//     },\r\n//   })\r\n\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        background: {\r\n            paper: '#fff',\r\n        },\r\n        text: {\r\n            primary: '#173A5E',\r\n            secondary: '#46505A',\r\n        },\r\n        action: {\r\n            active: '#001E3C',\r\n        },\r\n        success: {\r\n            dark: '#009688',\r\n        },\r\n        header: {\r\n            primary: 'red',\r\n        },\r\n    },\r\n})\r\n\r\nconst initUser = {\r\n    id: 0,\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: 'Abc@1234',\r\n    isNew: true,\r\n    isEdited: true,\r\n}\r\n\r\nfunction validateTextInput(name: String, props: GridPreProcessEditCellProps) {\r\n    console.log('props', props)\r\n\r\n    const regex = /^(([^<>()[\\]\\\\.,:\\s@\"]+(\\.[^<>()[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\n    const nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/\r\n    // console.log(nameRegex.test(String(props.otherFieldsProps.firstName)),\r\n    //             nameRegex.test(String(props.otherFieldsProps.lastName)),            \r\n    //             regex.test(String(props.email).toLowerCase())\r\n    // )\r\n    switch (name) {\r\n        case 'firstName':\r\n            // console.log('firstName',\r\n            //     nameRegex.test(String(props.props.value)),\r\n            //     nameRegex.test(String(props.otherFieldsProps.lastName.value)),\r\n            //     regex.test(String(props.otherFieldsProps.email.value).toLowerCase())\r\n            // )\r\n            return (\r\n                nameRegex.test(String(props.props.value)) &&\r\n                nameRegex.test(String(props.otherFieldsProps.lastName.value)) &&\r\n                regex.test(String(props.otherFieldsProps.email.value).toLowerCase())\r\n            )\r\n\r\n        case 'lastName':\r\n            // console.log('lastName',\r\n            //     nameRegex.test(String(props.otherFieldsProps.firstName.value)),\r\n            //     nameRegex.test(String(props.props.value)),\r\n            //     regex.test(String(props.otherFieldsProps.email.value).toLowerCase())\r\n            // )\r\n\r\n            return (\r\n                nameRegex.test(String(props.otherFieldsProps.firstName.value)) &&\r\n                nameRegex.test(String(props.props.value)) &&\r\n                regex.test(String(props.otherFieldsProps.email.value).toLowerCase())\r\n            )\r\n        case 'email':\r\n            // console.log('email',\r\n            //     nameRegex.test(String(props.otherFieldsProps.firstName.value)),\r\n            //     nameRegex.test(String(props.otherFieldsProps.lastName.value)),\r\n            //     regex.test(String(props.props.value).toLowerCase())\r\n            // )\r\n\r\n            return (\r\n                nameRegex.test(String(props.otherFieldsProps.firstName.value)) &&\r\n                nameRegex.test(String(props.otherFieldsProps.lastName.value)) &&\r\n                regex.test(String(props.props.value).toLowerCase())\r\n            )\r\n        default:\r\n            break\r\n    }\r\n}\r\n\r\nexport default function userPage() {\r\n    // useEffect(() => {\r\n    //     document.title = 'User'\r\n    //   },)\r\n\r\n    const [users, setUsers, status] = useAppContext()\r\n    const router = useRouter()\r\n\r\n    if (status === 'false') {\r\n        // setTimeout(() => router.push('/user/sign-in'), 200)\r\n        router.push('/user/sign-in')\r\n        console.log('not sign in')\r\n    }\r\n\r\n    // const tmpUsers = users.filter((row) => row?.isNew !== true)\r\n    // setUsers(_.cloneDeep(tmpUsers))\r\n\r\n    const [openDialog, setOpenDialog] = useState(false)\r\n    const [selectedId, setSelectedId] = useState([])\r\n\r\n    let isInValid = false\r\n    // console.log('path', router.pathname)\r\n    // const [rowID, setRowID] = useState<GridRowModel[]>(users)\r\n    // const [isEdit, setIsEdit] = useState(false)\r\n    // const isInEditMode = isEdit\r\n    // console.log('isInEditMode', isInEditMode)\r\n    // const [usersClone, setUsersClone] = useState(_.clone(users))\r\n\r\n    // console.log('clone', users)\r\n\r\n    // const [openDialog, setOpenDialog] = useState(false)\r\n\r\n\r\n\r\n    // const handleEditRowsStop = (params) => () => {\r\n    //     console.log('stop edit')\r\n\r\n    //     usersClone[params.id].isEdit = false\r\n    // }\r\n    // const [editRow, setEditRow] = useState([])\r\n    // const handleEditRowsStart = (params) => () => {\r\n    //     // setIsEdit(true)\r\n\r\n    //     // setEditRow(prevState => [...prevState, params])\r\n    //     console.log('start edit')\r\n\r\n    //     params.row.isEdit = true\r\n    //     // console.log('params', params)\r\n    //     // setUsersClone()\r\n    //     // usersClone[params.id].isEdit = true\r\n    //     // usersClone.map(e => {\r\n    //     //     e.id === params.id? params : e\r\n    //     // })\r\n    //     // usersClone[params.id] = _.cloneDeep(params)\r\n    //     usersClone[params.id].isEdit = true\r\n    // }\r\n\r\n    // // const handleEditClick = (id) => () => {\r\n    // //     console.log('edit ID:', id)\r\n    // //     // params.isEditable = true\r\n    // //     // // setRowID(id)\r\n    // //     // // getValue\r\n    // //     const tmp = _.cloneDeep(users)\r\n    // //     tmp[id].mode = GridRowModes.Edit\r\n    // //     console.log('tmp', tmp)\r\n\r\n    // //     setUsers(_.cloneDeep(tmp))\r\n    // //     setRowID({ ...users, [id]: { mode: GridRowModes.Edit } })\r\n    // //     console.log(users)\r\n\r\n    // // }\r\n\r\n    // const handleSaveClick = () => {\r\n    //     // setRowID({ ...users, [id]: { mode: GridRowModes.View } })\r\n    //     // console.log('params', params)\r\n    //     // const tmp = _.cloneDeep(usersClone)\r\n    //     // setUsers(usersClone.map((cloneRow) => users.map(row => {\r\n    //     //     return cloneRow.id === row.id? _.cloneDeep(cloneRow) : [_.cloneDeep(cloneRow), ...users] })))\r\n    //     const tmp = _.cloneDeep(usersClone)\r\n    //     setUsers(_.cloneDeep(tmp))\r\n    // }\r\n\r\n    // const handleDeleteClick = (params) => () => {\r\n    //     console.log('params', params)\r\n\r\n    //     setUsersClone(usersClone.filter((row) => row.id !== params.id))\r\n    //     // setUsers(users.filter((row) => row.id !== params.id))\r\n    // }\r\n\r\n    // const handleCancelClick = () => {\r\n\r\n    //     setUsersClone(_.cloneDeep(users))\r\n\r\n    //     // setIsEdit(false)\r\n    //     // setUsersClone(users.map((row) => (row.id === id ? row)))\r\n    //     // return users\r\n\r\n    //     // const rowId = params.row.id\r\n    //     // params.row.isEdit = false\r\n    //     // console.log('params', params)\r\n\r\n    //     // // const oldRow = users.find(\r\n    //     // //     (e) => e.id === rowId\r\n    //     // // )\r\n\r\n    //     // usersClone[params.id].isEdit = false\r\n    //     // console.log(\"oldRow\", usersClone[rowId])\r\n    //     // usersClone[rowId] = _.cloneDeep(oldRow)\r\n\r\n    //     // console.log('<><><>', usersClone)\r\n\r\n    // }\r\n    // //     const editedRow = usersClone.find((row) => row.id === id)\r\n    // //     if (editedRow!.isNew) {\r\n    // //         setUsers(usersClone.filter((row) => row.id !== id))\r\n    // //     }\r\n    // // }\r\n\r\n    // const handleOpenDialog = () => {\r\n    //     setOpenDialog(true)\r\n    // }\r\n\r\n    // const handleCloseDialog = () => {\r\n    //     setOpenDialog(false)\r\n    //     console.log('openDialog', openDialog)\r\n    //     setSelectedId(_.pull(prevState,))\r\n    // }\r\n    // const handleCommit = (e: GridCellEditCommitParams) => {\r\n    //     console.log('here')\r\n\r\n    //     const array = users.map(r => {\r\n    //         if (r.id === e.id) {\r\n    //             return {...r, [e.field]: e.value}\r\n    //         } else {\r\n    //             return {...r}\r\n    //         }\r\n    //     })\r\n    //     setRowID(_.cloneDeep(array))\r\n    //     console.log('array', array[e.id])\r\n\r\n    // }\r\n    // const fetchUsers = async () => {\r\n    //     const response = await fetch('/api/User')\r\n    //     const data = await response.json()\r\n    //     setUsers(data)\r\n    //     // console.clear()\r\n    //     // console.log(\"data\", data)\r\n\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     async function fetchData() {\r\n    //       const res = await fetch('/api/User')\r\n    //       const result: userList[] = await res.json()\r\n    //     //   console.log(\"data\", result)\r\n    //       setUsers(result)\r\n    //     }\r\n    //     fetchData()\r\n    //   }, [])\r\n\r\n    const handleRowEditStart = (params: GridRowParams, event: MuiEvent<React.SyntheticEvent>) => {\r\n        event.defaultMuiPrevented = true\r\n        // isInValid = true\r\n    }\r\n\r\n    const handleRowEditStop: GridEventListener<'rowEditStop'> = (params, event) => {\r\n        event.defaultMuiPrevented = true\r\n    }\r\n\r\n    const [editRowsModel, setEditRowsModel] = useState({})\r\n\r\n    // const handleEditRowsModelChange = useCallback((model: GridEditRowsModel) => {\r\n    //     const updatedModel = { ...model }\r\n    //     Object.keys(updatedModel).forEach((id) => {\r\n    //         if (updatedModel[id].email) {\r\n    //             const isValid = validateEmail(updatedModel[id].email.value)\r\n\r\n    //             console.log('>>>isValid', isValid)\r\n\r\n    //             updatedModel[id].email = { ...updatedModel[id].email, error: !isValid }\r\n    //         }\r\n    //     })\r\n    //     setEditRowsModel(model)\r\n    // }, [])\r\n\r\n    const [rowModesModel, setRowModesModel] = useState<GridRowModesModel>({})\r\n    const [isDisableBtn, setIsDisableBtn] = useState(true)\r\n\r\n    const handleAddRow = () => {\r\n        const newId = Date.now()\r\n        initUser.id = _.cloneDeep(newId)\r\n        setUsers((prevUsersClone) => [_.cloneDeep(initUser), ...prevUsersClone])\r\n        setRowModesModel((oldModel) => ({\r\n            ...oldModel,\r\n            [newId]: { mode: GridRowModes.Edit, fieldToFocus: 'firstName' },\r\n        }))\r\n    }\r\n\r\n    const handleEditClick = (id: GridRowId) => () => {\r\n        setRowModesModel({ ...rowModesModel, [id]: { mode: GridRowModes.Edit } })\r\n        setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isEdited: true } : e))\r\n    }\r\n\r\n    const handleSaveClick = (params: GridRowParams) => () => {\r\n        const id = params.id\r\n        setRowModesModel({ ...rowModesModel, [id]: { mode: GridRowModes.View } })\r\n        // const tmpState = _.cloneDeep(users)\r\n        console.log('rowId', id, '\\nparams', params, '\\nrowModel', rowModesModel)\r\n\r\n        // isInValid = params.row.map(e => {\r\n        //     return e === ''\r\n        // })\r\n        // tmpState[0].isNew = false\r\n        // setUsers(_.cloneDeep(tmpState))\r\n        isInValid ? setIsDisableBtn(true) : setIsDisableBtn(false)\r\n        setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isNew: false } : e))\r\n    }\r\n\r\n    const handleDeleteClick = (id: GridRowId) => () => {\r\n        setOpenDialog(true)\r\n        // setUsers(users.filter((row) => row.id !== id))\r\n        setSelectedId(prevState => [...prevState, id])\r\n    }\r\n\r\n    const handleConfirmDelete = () => {\r\n        setUsers(users.filter((row) => row.id !== selectedId[0]))\r\n        handleCloseDialog()\r\n    }\r\n\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog(false)\r\n        // console.log('openDialog', openDialog)\r\n        setSelectedId([])\r\n    }\r\n\r\n    const handleCancelClick = (id: GridRowId) => () => {\r\n        // console.log('users', users)\r\n\r\n        setRowModesModel({\r\n            ...rowModesModel,\r\n            [id]: { mode: GridRowModes.View, ignoreModifications: true },\r\n        })\r\n\r\n        const editedRow = users.find((row) => row.id === id)\r\n        setIsDisableBtn(true)\r\n        if (editedRow?.isNew) {\r\n            setUsers(users.filter((row) => row.id !== id))\r\n        }\r\n        else {\r\n            setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isEdited: false } : e))\r\n        }\r\n    }\r\n\r\n    const processRowUpdate = (newRow) => {\r\n        const updatedRow = { ...newRow }\r\n        // console.log('updateRow', updatedRow)\r\n        setUsers(users.map((row) => (row.id === newRow.id ? updatedRow : row)))\r\n\r\n        return updatedRow\r\n    }\r\n\r\n    const getCellTheme = (params) => {\r\n        console.log('>>>theme', params.row.cellTheme)\r\n        \r\n        return params.row.celTheme\r\n    }\r\n\r\n    // const handleDeleteClickTest = (e) => {\r\n    //     console.log('e', e)\r\n    // }\r\n\r\n    const cols: GridColumns = [\r\n        { field: 'id', headerName: 'User ID', flex: 1, },\r\n        {\r\n            field: 'firstName', headerName: 'First name', flex: 1, editable: true,\r\n            preProcessEditCellProps(params: GridPreProcessEditCellProps) {\r\n                isInValid = !validateTextInput('firstName', params)\r\n                // console.log('isInValid', isInValid)        \r\n                const id = params.id\r\n                isInValid ? setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isEdited: true } : e))\r\n                    : setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isEdited: false } : e))\r\n                return { ...params.props, error: isInValid }\r\n            },\r\n        },\r\n        {\r\n            field: 'lastName', headerName: 'Last name', flex: 1, editable: true,\r\n            preProcessEditCellProps(params: GridPreProcessEditCellProps) {\r\n                isInValid = !validateTextInput('lastName', params)\r\n                // console.log('isInValid', isInValid)                \r\n                const id = params.id\r\n                isInValid ? setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isEdited: true } : e))\r\n                    : setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isEdited: false } : e))\r\n                return { ...params.props, error: isInValid }\r\n            }\r\n        },\r\n        {\r\n            field: 'email', headerName: 'Email', flex: 1, editable: true,\r\n            preProcessEditCellProps(params: GridPreProcessEditCellProps) {\r\n                // const isValid = params.props.value.length > 0\r\n                isInValid = !validateTextInput('email', params)\r\n                // console.log('isInValid', isInValid)                    \r\n                const id = params.id\r\n                isInValid ? setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isEdited: true } : e))\r\n                    : setUsers(prevState => prevState.map(e => e.id === id ? { ...e, isEdited: false } : e))\r\n\r\n                return { ...params.props, error: isInValid }\r\n            }\r\n        },\r\n        {\r\n            field: 'actions',\r\n            type: 'actions',\r\n            headerName: 'Actions',\r\n            width: 100,\r\n            cellClassName: 'actions',\r\n            getActions: (params) => {\r\n                // <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                //     <IconButton aria-label=\"save\" size=\"small\" onClick={handleSaveClick(params)}>\r\n                //         <SaveIcon fontSize=\"inherit\"  />\r\n                //     </IconButton> \r\n                // <IconButton aria-label=\"cancel\" size=\"small\" onClick={handleCancelClick}>\r\n                //                 <CancelIcon fontSize=\"inherit\" />\r\n                //             </IconButton>\r\n                //         </Stack>\r\n                // const id = params.id\r\n                // console.log('params', params.row.id, params.row.isEdit)\r\n                const id = params.id\r\n                const isInEditMode = rowModesModel[id]?.mode === GridRowModes.Edit\r\n                if (isInEditMode) {\r\n                    return [\r\n                        <Tooltip title=\"Save\">\r\n                            <Typography>\r\n                                <GridActionsCellItem\r\n                                    icon={<SaveIcon />}\r\n                                    label=\"Save\"\r\n                                    onClick={handleSaveClick(params)}\r\n                                    color=\"success\"\r\n                                    disabled={params.row.isEdited}\r\n                                />\r\n                            </Typography>\r\n                        </Tooltip>,\r\n                        <Tooltip title=\"Cancel\">\r\n                            <GridActionsCellItem\r\n                                icon={<CancelIcon />}\r\n                                label=\"Cancel\"\r\n                                className=\"textPrimary\"\r\n                                onClick={handleCancelClick(id)}\r\n                                color=\"warning\"\r\n                            />\r\n                        </Tooltip>,\r\n                    ]\r\n                }\r\n                return [\r\n                    // <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                    // <IconButton aria-label=\"edit\" size=\"small\" onClick={handleEditRowsStart(params)}>\r\n                    //     <EditIcon fontSize=\"inherit\"  />\r\n                    // </IconButton>\r\n                    //     <IconButton aria-label=\"delete\" size=\"small\" onClick={() => handleOpenDialog}>\r\n                    //         <DeleteIcon fontSize=\"inherit\" />\r\n                    //     </IconButton>\r\n                    // </Stack>\r\n                    <Tooltip title=\"Edit\">\r\n                        <GridActionsCellItem\r\n                            icon={<EditIcon />}\r\n                            label=\"Edit\"\r\n                            onClick={handleEditClick(id)}\r\n                            color=\"primary\"\r\n                        />\r\n                    </Tooltip>,\r\n                    <Tooltip title=\"Delete\">\r\n                        <GridActionsCellItem\r\n                            icon={<DeleteIcon />}\r\n                            label=\"Delete\"\r\n                            onClick={handleDeleteClick(id)}\r\n                            color=\"error\"\r\n                        />\r\n                    </Tooltip>,\r\n                ]\r\n            },\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{\r\n                height: 405, width: '100%'\r\n            }}>\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1} justifyContent=\"end\">\r\n                    {/* <Button color=\"primary\" startIcon={<AddIcon />} onClick={handleAddRow}>\r\n                        New User\r\n                    </Button> */}\r\n                    {/* <Button color=\"primary\" startIcon={<SaveIcon />} onClick={handleSaveClick}>\r\n                        Save\r\n                    </Button>\r\n                    <Button color=\"primary\" startIcon={<CancelIcon />} onClick={handleCancelClick}>\r\n                        Cancel\r\n                    </Button> */}\r\n                </Stack>\r\n                <DataGrid\r\n                    // onCellEditCommit={handleCommit}\r\n                    autoHeight\r\n                    rows={users}\r\n                    columns={cols}\r\n                    pageSize={5}\r\n                    rowsPerPageOptions={[5]}\r\n                    // checkboxSelection\r\n                    editMode=\"row\"\r\n                    editRowsModel={editRowsModel}\r\n                    // onEditRowsModelChange={handleEditRowsModelChange}\r\n                    // onRowEditCommit={handleRowEditCommit}\r\n                    rowModesModel={rowModesModel}\r\n                    // rowModesModel={{ 3: { mode: GridRowModes.Edit } }}\r\n                    onRowEditStart={handleRowEditStart}\r\n                    onRowEditStop={handleRowEditStop}\r\n                    processRowUpdate={processRowUpdate}\r\n\r\n                    components={{\r\n                        Toolbar: () => {\r\n                            return (<GridToolbarContainer sx={{ justifyContent: 'flex-end' }}>\r\n                                <Button startIcon={<AddIcon />} onClick={handleAddRow}>\r\n                                    New User\r\n                                </Button>\r\n                            </GridToolbarContainer>)\r\n                        }\r\n                    }}\r\n                    componentsProps={{\r\n                        toolbar: { setUsers, setRowModesModel },\r\n                    }}\r\n\r\n                    experimentalFeatures={{ newEditingApi: true }}\r\n                    disableSelectionOnClick\r\n                    sx={{\r\n                        '.MuiDataGrid-columnHeaderTitle': {\r\n                            // fontWeight: 'bold',\r\n                            // backgroundColor: '#1976d2',\r\n                            color: 'white',\r\n                        },\r\n                        '.MuiDataGrid-columnSeparator': {\r\n                            display: 'none',\r\n                        },\r\n                        '.MuiDataGrid-columnHeaders': {\r\n                            backgroundColor: '#1976d2',\r\n                            borderRadius: 0,\r\n                        },\r\n                        borderRadius: 0,\r\n                        color: 'info.main',\r\n                        // '& .super-app-theme--cell': {\r\n                        //     backgroundColor: 'rgba(224, 183, 60, 0.55)',\r\n                        //     color: '#1a3e72',\r\n                        //     fontWeight: '100',\r\n                        // },\r\n                        // '& .validInputs': {\r\n                        //     backgroundColor: '#1976d2',\r\n                        //     color: '#1a3e72',\r\n                        //     fontWeight: '600',\r\n                        // },\r\n                        // '& .inValidInputs': {\r\n                        //     backgroundColor: '#d47483',\r\n                        //     color: '#fc0303',\r\n                        //     fontWeight: '800',\r\n                        // },\r\n                    }}\r\n                    // getCellClassName={params => {\r\n                    //     return params.value !== \"\"? \"validInputs\" : \"inValidInputs\"\r\n                    // }}\r\n                />\r\n            </Box>\r\n            <Dialog\r\n                open={openDialog}\r\n            // onClose={handleCloseDialog}\r\n            >\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>This operation cannot be undone. Are you sure?</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={handleConfirmDelete}\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"error\"\r\n                        onClick={handleCloseDialog}\r\n                    >\r\n                        No\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n"
        }
    ]
}