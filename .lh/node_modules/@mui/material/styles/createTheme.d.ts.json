{
    "sourceFile": "node_modules/@mui/material/styles/createTheme.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1659671063904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1659671063904,
            "name": "Commit-0",
            "content": "import { ThemeOptions as SystemThemeOptions, Theme as SystemTheme } from '@mui/system';\nimport { Mixins, MixinsOptions } from './createMixins';\nimport { Palette, PaletteOptions } from './createPalette';\nimport { Typography, TypographyOptions } from './createTypography';\nimport { Shadows } from './shadows';\nimport { Transitions, TransitionsOptions } from './createTransitions';\nimport { ZIndex, ZIndexOptions } from './zIndex';\nimport { Components } from './components';\n\nexport interface ThemeOptions extends Omit<SystemThemeOptions, 'zIndex'> {\n  mixins?: MixinsOptions;\n  components?: Components<Omit<Theme, 'components'>>;\n  palette?: PaletteOptions;\n  shadows?: Shadows;\n  transitions?: TransitionsOptions;\n  typography?: TypographyOptions | ((palette: Palette) => TypographyOptions);\n  zIndex?: ZIndexOptions;\n  unstable_strictMode?: boolean;\n}\n\ninterface BaseTheme extends SystemTheme {\n  mixins: Mixins;\n  palette: Palette;\n  shadows: Shadows;\n  transitions: Transitions;\n  typography: Typography;\n  zIndex: ZIndex;\n  unstable_strictMode?: boolean;\n}\n\n// shut off automatic exporting for the `BaseTheme` above\nexport {};\n\n/**\n * Our [TypeScript guide on theme customization](https://mui.com/material-ui/guides/typescript/#customization-of-theme) explains in detail how you would add custom properties.\n */\nexport interface Theme extends BaseTheme {\n  components?: Components<BaseTheme>;\n}\n\n/**\n * @deprecated\n * Use `import { createTheme } from '@mui/material/styles'` instead.\n */\nexport function createMuiTheme(options?: ThemeOptions, ...args: object[]): Theme;\n\n/**\n * Generate a theme base on the options received.\n * @param options Takes an incomplete theme object and adds the missing parts.\n * @param args Deep merge the arguments with the about to be returned theme.\n * @returns A complete, ready-to-use theme object.\n */\nexport default function createTheme(options?: ThemeOptions, ...args: object[]): Theme;\n"
        }
    ]
}